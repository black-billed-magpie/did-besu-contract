{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)698_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)698_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)698_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "3527817f9c4247646e7466af824fc273147abe88e98581ad2b449056beb0858c",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "c532ba8aa09c2d483f9ddfedf1b6f6d9aa1e66c8558f66d73a49fc74134c08fc",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "483273a2fd878bc5081fad8d50e2c6e8ec77db062ef3dcfb932b2df083666379",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "4893944d0bf7c13b00cd5159dfa12b65268a653bd5fc305440b702b4ff856f3e",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/OpenDID.sol:OpenDID": {
        "src": "contracts/OpenDID.sol:22",
        "version": {
          "withMetadata": "619b0786c03eae85391b9375dc4d2d4065bb48c9a7c8c83baed871f962c39a2a",
          "withoutMetadata": "f57597cb4370ad7c3978e7d253665c225eff69e98857e87b7d69758e4d1f55ce",
          "linkedWithoutMetadata": "f57597cb4370ad7c3978e7d253665c225eff69e98857e87b7d69758e4d1f55ce"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/data/DocumentLibrary.sol:DocumentLibrary",
          "contracts/data/VcMetaLibrary.sol:VcMetaLibrary",
          "contracts/data/VcSchemaMetaLibrary.sol:VcSchemaMetaLibrary",
          "contracts/data/ZKPLibrary.sol:ZKPLibrary",
          "contracts/data/ResponseLibrary.sol:ResponseLibrary",
          "contracts/data/RoleLibrary.sol:RoleLibrary",
          "contracts/utils/MultiBaseLibrary.sol:MultiBaseLibrary"
        ],
        "methods": [
          "initialize(address,address,address)",
          "hasInitialized()",
          "setDocumentStorage(address)",
          "setVcMetaStorage(address)",
          "setZKPStorage(address)",
          "registDidDoc((string[],string,string,string,string,string,bool,struct VerificationMethodLibrary.VerificationMethod[],string[],string[],string[],string[],string[],struct ServiceLibrary.Service[]),string)",
          "getDidDoc(string)",
          "getDidDocStatus(string)",
          "updateDidDocStatusInService(string,string,string)",
          "updateDidDocStatusRevocation(string,string,string)",
          "registVcMetaData((string,(string,string),string,(string,string),string,string,string,string,string,string))",
          "getVcmetaData(string)",
          "updateVcStats(string,string)",
          "registVcSchema((string,string,string,string,(string,string),(struct VcSchemaMetaLibrary.VCSchemaClaim[])))",
          "getVcSchema(string)",
          "registZKPCredential((string,string,string,string[],string))",
          "getZKPCredential(string)",
          "registZKPCredentialDefinition((string,string,string,string,string,string))",
          "getZKPCredentialDefinition(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)698_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "documentStorage",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(DocumentStorage)5884",
              "contract": "OpenDID",
              "src": "contracts/OpenDID.sol:41"
            },
            {
              "label": "vcMetaStorage",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(VcMetaStorage)6238",
              "contract": "OpenDID",
              "src": "contracts/OpenDID.sol:42"
            },
            {
              "label": "zkpStorage",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ZKPStorage)6424",
              "contract": "OpenDID",
              "src": "contracts/OpenDID.sol:43"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(DocumentStorage)5884": {
              "label": "contract DocumentStorage",
              "numberOfBytes": "20"
            },
            "t_contract(VcMetaStorage)6238": {
              "label": "contract VcMetaStorage",
              "numberOfBytes": "20"
            },
            "t_contract(ZKPStorage)6424": {
              "label": "contract ZKPStorage",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)698_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)698_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "contracts/data/CredentialSchemaLibrary.sol:CredentialSchemaLibrary": {
        "src": "contracts/data/CredentialSchemaLibrary.sol:4",
        "version": {
          "withMetadata": "d8403b61c0fdecb49f6ef4b581a03b896ddfbf0fa135a65d1e2934994f682249",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/data/DocumentLibrary.sol:DocumentLibrary": {
        "src": "contracts/data/DocumentLibrary.sol:7",
        "version": {
          "withMetadata": "f2c171fd1692999b7dee9ff211cb14a713c1335b1acb14189b0c3a00e8c46764",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/data/ServiceLibrary.sol:ServiceLibrary",
          "contracts/data/VerificationMethodLibrary.sol:VerificationMethodLibrary"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/data/ProviderLibrary.sol:ProviderLibrary": {
        "src": "contracts/data/ProviderLibrary.sol:4",
        "version": {
          "withMetadata": "4ecab4a7e62398ef247fcc39d932eb0a9740c4d8f90132c01b5c21c1da3bc9fd",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/data/ResponseLibrary.sol:ResponseLibrary": {
        "src": "contracts/data/ResponseLibrary.sol:4",
        "version": {
          "withMetadata": "159087b943f540e9a029fa0dc7ec63a97f624e52985737d744151c176c686794",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/data/RoleLibrary.sol:RoleLibrary": {
        "src": "contracts/data/RoleLibrary.sol:4",
        "version": {
          "withMetadata": "11ae5097a7ffd11b4609f75682540b1d4de2363b27a03a5e5f8eb6912c1852c8",
          "withoutMetadata": "db387d4b3a17d8c0fbfd0aa5e5cfc2d706efd8912010b7fe47e27b0f2abe39bd",
          "linkedWithoutMetadata": "db387d4b3a17d8c0fbfd0aa5e5cfc2d706efd8912010b7fe47e27b0f2abe39bd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/data/ServiceLibrary.sol:ServiceLibrary": {
        "src": "contracts/data/ServiceLibrary.sol:4",
        "version": {
          "withMetadata": "146fb76c39e5ec5720ac78d1e3945ce293cab4663ffd91a56780a496b17c1137",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/data/VcMetaLibrary.sol:VcMetaLibrary": {
        "src": "contracts/data/VcMetaLibrary.sol:7",
        "version": {
          "withMetadata": "4a098fbba5ff68dc1f173d96e53efbdb7d25d9bfa004b544386f9795e65879cc",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/data/ProviderLibrary.sol:ProviderLibrary",
          "contracts/data/CredentialSchemaLibrary.sol:CredentialSchemaLibrary"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/data/VcSchemaMetaLibrary.sol:VcSchemaMetaLibrary": {
        "src": "contracts/data/VcSchemaMetaLibrary.sol:4",
        "version": {
          "withMetadata": "1979a597046a81aac1efbef17678f1c325bab87c6d5c49f47e0708d38f5acbdb",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/data/VerificationMethodLibrary.sol:VerificationMethodLibrary": {
        "src": "contracts/data/VerificationMethodLibrary.sol:4",
        "version": {
          "withMetadata": "510dd5d8b185a35273224064518335bca662cca5a8785583f0123a11221fb6d8",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/data/ZKPLibrary.sol:ZKPLibrary": {
        "src": "contracts/data/ZKPLibrary.sol:4",
        "version": {
          "withMetadata": "1699e31a8a9eae229c2073174e5344f05bc1616cd398d4d6e6f7c2f463e73d99",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/storage/DocumentStorage.sol:DocumentStorage": {
        "src": "contracts/storage/DocumentStorage.sol:15",
        "version": {
          "withMetadata": "ad218bd9a53fb740785c3457fe80c30101f9573b3c0220ba64a16d38db7fc385",
          "withoutMetadata": "3b2a6fa6e77627a3275a1f65e3761aa8ab03287c49dd874783870e7f07c3208c",
          "linkedWithoutMetadata": "3b2a6fa6e77627a3275a1f65e3761aa8ab03287c49dd874783870e7f07c3208c"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/data/DocumentLibrary.sol:DocumentLibrary",
          "contracts/utils/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "initialize()",
          "hasInitialized()",
          "registerDocument((string[],string,string,string,string,string,bool,struct VerificationMethodLibrary.VerificationMethod[],string[],string[],string[],string[],string[],struct ServiceLibrary.Service[]),address)",
          "getDocument(string)",
          "getDocument(string,string)",
          "getDocumentStatus(string)",
          "getDocumentsByController(address)",
          "updateDocument((string[],string,string,string,string,string,bool,struct VerificationMethodLibrary.VerificationMethod[],string[],string[],string[],string[],string[],struct ServiceLibrary.Service[]),string,string)",
          "removeDocument(string)",
          "updateDocumentStatus((string,uint8,string,string,string),string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DocumentStorage",
            "src": "contracts/storage/DocumentStorage.sol:38"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Service)1526_storage)dyn_storage": {
              "label": "struct ServiceLibrary.Service[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(VerificationMethod)1725_storage)dyn_storage": {
              "label": "struct VerificationMethodLibrary.VerificationMethod[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(AuthType)1712": {
              "label": "enum VerificationMethodLibrary.AuthType",
              "members": [
                "Free",
                "PIN",
                "BIO"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(DIDDOC_STATUS)1311": {
              "label": "enum DocumentLibrary.DIDDOC_STATUS",
              "members": [
                "ACTIVATED",
                "DEACTIVATED",
                "REVOKED",
                "TERMINATED"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(KeyType)1708": {
              "label": "enum VerificationMethodLibrary.KeyType",
              "members": [
                "RsaVerificationKey2018",
                "Secp256k1VerificationKey2018",
                "Secp256r1VerificationKey2018"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
              "label": "mapping(address => string[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Document)1279_storage)": {
              "label": "mapping(string => struct DocumentLibrary.Document)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(DocumentStatus)1323_storage)": {
              "label": "mapping(string => struct DocumentLibrary.DocumentStatus)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Document)1279_storage": {
              "label": "struct DocumentLibrary.Document",
              "members": [
                {
                  "label": "context",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "id",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "controller",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "created",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "updated",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "versionId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "deactivated",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "verificationMethod",
                  "type": "t_array(t_struct(VerificationMethod)1725_storage)dyn_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "assertionsMethod",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "authentication",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "keyAgreement",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "capabilityInvocation",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "capabilityDelegation",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "services",
                  "type": "t_array(t_struct(Service)1526_storage)dyn_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(DocumentStatus)1323_storage": {
              "label": "struct DocumentLibrary.DocumentStatus",
              "members": [
                {
                  "label": "id",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "status",
                  "type": "t_enum(DIDDOC_STATUS)1311",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "version",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "roleType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "terminatedTime",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Service)1526_storage": {
              "label": "struct ServiceLibrary.Service",
              "members": [
                {
                  "label": "id",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "serviceEndpoint",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "serviceType",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Storage)1850_storage": {
              "label": "struct DocumentStorage.Storage",
              "members": [
                {
                  "label": "_doc",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(Document)1279_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_docStatus",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(DocumentStatus)1323_storage)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_documentIds",
                  "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(VerificationMethod)1725_storage": {
              "label": "struct VerificationMethodLibrary.VerificationMethod",
              "members": [
                {
                  "label": "id",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "keyType",
                  "type": "t_enum(KeyType)1708",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "controller",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "publicKeyMultibase",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "authType",
                  "type": "t_enum(AuthType)1712",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openDID.storage.DocumentStorage": [
              {
                "contract": "DocumentStorage",
                "label": "_doc",
                "type": "t_mapping(t_string_memory_ptr,t_struct(Document)1279_storage)",
                "src": "contracts/storage/DocumentStorage.sol:30",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "DocumentStorage",
                "label": "_docStatus",
                "type": "t_mapping(t_string_memory_ptr,t_struct(DocumentStatus)1323_storage)",
                "src": "contracts/storage/DocumentStorage.sol:31",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "DocumentStorage",
                "label": "_documentIds",
                "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
                "src": "contracts/storage/DocumentStorage.sol:32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "contracts/storage/VcMetaStorage.sol:VcMetaStorage": {
        "src": "contracts/storage/VcMetaStorage.sol:9",
        "version": {
          "withMetadata": "2dae216090e83819d1bb4af49d7021e1b893567fe982fb24efa99a230f3b163b",
          "withoutMetadata": "a9bc803dc344a7f1c1b52a7477f39ae93984ceedae2b9dac8a982613bfe89162",
          "linkedWithoutMetadata": "a9bc803dc344a7f1c1b52a7477f39ae93984ceedae2b9dac8a982613bfe89162"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/data/VcMetaLibrary.sol:VcMetaLibrary",
          "contracts/data/VcSchemaMetaLibrary.sol:VcSchemaMetaLibrary"
        ],
        "methods": [
          "()",
          "initialize()",
          "hasInitialized()",
          "registerVcMeta((string,(string,string),string,(string,string),string,string,string,string,string,string))",
          "getVcMeta(string)",
          "updateVcMetaStatus(string,string)",
          "registerVcSchema((string,string,string,string,(string,string),(struct VcSchemaMetaLibrary.VCSchemaClaim[])))",
          "getVcSchema(string)",
          "deleteVcSchema(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VcMetaStorage",
            "src": "contracts/storage/VcMetaStorage.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "VcMetaStorage",
              "src": "contracts/storage/VcMetaStorage.sol:33"
            },
            {
              "label": "_admin",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "VcMetaStorage",
              "src": "contracts/storage/VcMetaStorage.sol:34"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "contracts/storage/ZKPStorage.sol:ZKPStorage": {
        "src": "contracts/storage/ZKPStorage.sol:8",
        "version": {
          "withMetadata": "c279cc72cb737b6cc5a829e305755cfe145ed9b6e18001b79b8126277fa545b4",
          "withoutMetadata": "2b68101c014c8f7d90c13676bbe082342321ce47cf6509ebbcca96c55d288782",
          "linkedWithoutMetadata": "2b68101c014c8f7d90c13676bbe082342321ce47cf6509ebbcca96c55d288782"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/data/ZKPLibrary.sol:ZKPLibrary"
        ],
        "methods": [
          "()",
          "initialize()",
          "hasInitialized()",
          "registerCredentialDefinition((string,string,string,string,string,string))",
          "getCredentialDefinition(string)",
          "removeCredentialDefinition(string)",
          "registerSchema((string,string,string,string[],string))",
          "getSchema(string)",
          "removeSchema(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ZKPStorage",
            "src": "contracts/storage/ZKPStorage.sol:13"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "contracts/utils/MultiBaseLibrary.sol:MultiBaseLibrary": {
        "src": "contracts/utils/MultiBaseLibrary.sol:4",
        "version": {
          "withMetadata": "6c1422f8ec90a726484ae469fbb1ac42a3abe402263bfbc8deb9568062a7c75b",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/utils/StringUtils.sol:StringUtils": {
        "src": "contracts/utils/StringUtils.sol:4",
        "version": {
          "withMetadata": "edf860201eaa79f11390e248f755be55c44502580becab14c885100a122cbff6",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/utils/VerifySignatureLibrary.sol:VerifySignatureLibrary": {
        "src": "contracts/utils/VerifySignatureLibrary.sol:4",
        "version": {
          "withMetadata": "f6391646d0957b13e707bada4f770933ec7b0a706f0c9ee37066f6ef2f48a844",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      }
    }
  ]
}