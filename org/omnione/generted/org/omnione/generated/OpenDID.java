package org.omnione.generated;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.CustomError;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint64;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.abi.datatypes.reflection.Parameterized;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/LFDT-web3j/web3j/tree/main/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.7.0.
 */
@SuppressWarnings("rawtypes")
public class OpenDID extends Contract {
    public static final String BINARY = "60a0806040523460295730608052615f49908161002f823960805181818161117301526113590152f35b600080fdfe61024080604052600436101561001457600080fd5b600090813560e01c90816301ffc9a714612408575080630803fac0146123d257806315a9802a14611fd55780631c5b66d614611f4e57806320a6ab5514611e4c5780632361f6af14611bc1578063248a9ca314611b8b5780632f2ff15d14611b4a578063342b5ed814611b0a57806336568abe14611ac55780633764831c1461189557806339a75ce714611855578063437c6c241461177f57806347bf65bc146115295780634f1ef286146113095780635213be26146111c857806352d1902d1461116057806362ee4a56146110f657806368fcbbbb1461100157806371f2708114610f9957806375de641d14610f43578063804225b614610bec57806391d1485414610ba1578063a217fddf14610b85578063a5dba8d114610993578063ac92f71814610851578063ad3cb1cc14610806578063b65ef606146107c6578063ca45f027146104cb578063d547741f146104815763f8c8765e1461017757600080fd5b3461047e57608036600319011261047e576101906124af565b610198612499565b906044356001600160a01b0381169081900361047c576064356001600160a01b038116919082900361047857600080516020615ef4833981519152549360ff8560401c1615946001600160401b03811680159081610470575b6001149081610466575b15908161045d575b5061044e5767ffffffffffffffff198116600117600080516020615ef48339815191525585610421575b5061023733615a77565b50600080516020615ef4833981519152549360ff8560401c1615610412576001600160a01b03169081156103cd576001600160a01b0316908115610388578215610343576001600160601b0360a01b60015416176001556001600160601b0360a01b60025416176002556001600160601b0360a01b60035416176003556001600160601b0360a01b6004541617600455604051917f587930504fa5b1062f394d90f9dac9ecadd354ed23a97af9ea4e44dff4870a848480a16102f7578280f35b68ff00000000000000001916600080516020615ef483398151915255600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a138808280f35b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964205a4b5053746f7261676520616464726573730000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642056634d65746153746f7261676520616464726573730000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420446f63756d656e7453746f726167652061646472657373006044820152606490fd5b631afcd79f60e31b8752600487fd5b68ffffffffffffffffff19166801000000000000000117600080516020615ef4833981519152553861022d565b63f92ee8a960e01b8752600487fd5b90501538610203565b303b1591506101fb565b8791506101f1565b8480fd5b835b80fd5b503461047e57604036600319011261047e576104c76004356104a1612499565b906104c26104bd82600052600060205260016040600020015490565b615a3c565b615bd6565b5080f35b503461047e57806104db36612461565b6104e36158cf565b6003546001600160a01b0316803b156107c257604051634ea29d8f60e01b81526020600482015291839183916105936105746105556105366105258580612b01565b60c060248a015260e4890191612b32565b6105436020860186612b01565b8883036023190160448a015290612b32565b6105626040850185612b01565b87830360231901606489015290612b32565b6105816060840184612ba2565b868303602319016084880152906142a8565b906105a16080820182612ba2565b6023198685030160a4870152808452602084019360208260051b820101948389925b84841061062457505050505050836105f781936105e58460a08a960190612b01565b8483036023190160c486015290612b32565b03925af18015610619576106085750f35b8161061291612785565b61047e5780f35b6040513d84823e3d90fd5b9295979950929590939750601f198282030184528a6106438985612b53565b61066c6106616106538380612bf7565b604086526040860190612c0b565b916020810190612ba2565b90936020818403910152808252602082019160208260051b820101948094905b8382106106b4575050505050506020806001929901940194019093899795928b9997956105c3565b9091929394959c9f9e9d9c601f19848203018652607e1982360301873512156107be578f828835019161074261073761071c6107016106f38780612b01565b608087526080870191612b32565b61070e6020880188612b01565b908683036020880152612b32565b6107296040870187612b01565b908583036040870152612b32565b936060810190612ba2565b916060818603910152818452602084019160208160051b860101948294925b828410610789575050505050509e9f9c9d9e602080600192980196019201909392919361068c565b9091929394956020806107b0600193601f19878203018a526107ab8b87612b53565b612b67565b980196019401929190610761565b8f80fd5b5050fd5b503461047e57602036600319011261047e576107e06124af565b6107e86159ca565b60018060a01b03166001600160601b0360a01b600354161760035580f35b503461047e578060031936011261047e5761084d60408051906108298183612785565b60058252640352e302e360dc1b6020830152519182916020835260208301906125c6565b0390f35b503461047e57602036600319011261047e576004356001600160401b03811161098f576108829036906004016124c5565b60606080604051610892816126b0565b82815285602082015282604082015282808201520152801561093557600154604051630fe3478b60e31b81526020600482015292849284926001600160a01b031691839182916108e6916024840191612b32565b03915afa908115610619578261084d9392610912575b5050604051918291602083526020830190612a7a565b61092e92503d8091833e6109268183612785565b810190612d67565b38806108fc565b60405162461bcd60e51b815260206004820152602c60248201527f446f63756d656e7453746f726167653a20446f63756d656e742049442063616e60448201526b6e6f7420626520656d70747960a01b6064820152608490fd5b5080fd5b503461047e57602036600319011261047e576004356001600160401b03811161098f576109c76109cd9136906004016124c5565b90615473565b906040519182916020835260a0610a53610a3e610a28610a126109fc875160c060208b015260e08a01906125c6565b6020880151898203601f190160408b01526125c6565b6040870151888203601f190160608a01526125c6565b6060860151878203601f190160808901526125c6565b6080850151868203601f190184880152612686565b920151601f198484030160c08501526020830190519260208152835180925260408101602060408460051b84010195019380925b848410610a945787870388f35b9193959092949650603f1982820301845286519060408101918051926040835283518091526060830190602060608260051b860101950191875b828110610b065750505050610af460019360209384809401519084818403910152612644565b98019401940191879695939491610a87565b90919295602080610b79600193605f198a82030187528a51906080610b68610b4a610b3a855160a0865260a08601906125c6565b87860151858203898701526125c6565b604085015115156040850152606085015184820360608601526125c6565b9201519060808184039101526125c6565b98019493019101610ace565b503461047e578060031936011261047e57602090604051908152f35b503461047e57604036600319011261047e576040610bbd612499565b91600435815280602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b503461047e57610bfb36612535565b610c079594929561594c565b6001546040516353ec871160e01b8152946001600160a01b039091169290888680610c3886868a8d60048601614281565b0381875afa899681610efc575b50610cf757610c52612e38565b6308c379a014610cc0575b60405162461bcd60e51b815260206004820152603060248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e6720646f60448201526f18dd5b595b9d081c995d1c9a595d985b60821b606482015280608481015b0390fd5b610cc8612e56565b80610cd35750610c5d565b60405162461bcd60e51b815260206004820152908190610cbc9060248301906125c6565b8415610ea2578715610e44578897604051602081019082848337610d2f6020828d86820190838201520301601f198101835282612785565b5190206040516020810190681050d512559055115160ba1b825260098152610d58602982612785565b51902003610dde5750508660c08601525b823b15610dda578694610dc78692610da394610db56040519a8b998a98899763270766fb60e11b8952606060048a01526064890190612818565b87810360031901602489015291612b32565b84810360031901604486015291612b32565b03925af180156106195761060857505080f35b8680fd5b610e05602060405183819483830196873781018c838201520301601f198101835282612785565b51902060405160208101906a11115050d512559055115160aa1b8252600b8152610e30602b82612785565b51902003610d6957600160c0860152610d69565b60405162461bcd60e51b815260206004820152603060248201527f446f63756d656e7453746f726167653a20446f63756d656e742073746174757360448201526f2063616e6e6f7420626520656d70747960801b6064820152608490fd5b60405162461bcd60e51b815260206004820152602c60248201527f446f63756d656e7453746f726167653a20446f63756d656e742069642063616e60448201526b6e6f7420626520656d70747960a01b6064820152608490fd5b9096503d808b833e610f0e8183612785565b8101602082820312610f3f5781516001600160401b038111610f3b57610f349201613d15565b9538610c45565b8b80fd5b8a80fd5b503461047e57602036600319011261047e57600435906001600160401b03821161047e576101c0600319833603011261047e5761084d610f85836004016143a1565b6040519182916020835260208301906125c6565b503461047e576104c7610fab366124f2565b610fb36159ca565b610fc76001600160a01b0384161515612c8d565b610fd2811515612cd9565b610ff96020604051838194838301968737810188838201520301601f198101835282612785565b519020615b4b565b503461047e57604036600319011261047e576004356001600160401b03811161098f576110329036906004016124c5565b906024356001600160401b03811161047c576110529036906004016124c5565b929061105c615c58565b60025485906001600160a01b0316803b1561098f5760405163301150f760e21b815290829082908183816110968c8a8c8e60048601614281565b03925af18015610619576110e1575b50507ff958d2c8ca179cb3614546dff74d0aa57c6d18424cf2b171c9a3f6c5e1868107936110db916040519485943391866139d3565b0390a180f35b816110eb91612785565b6104785784386110a5565b503461047e57602036600319011261047e57600435906001600160401b03821161047e5761113061112a36600485016124c5565b9061412b565b60405180916020825261084d602061115383516040838701526060860190612818565b9201516040840190612a6d565b503461047e578060031936011261047e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036111b9576020604051600080516020615ed48339815191528152f35b63703e46dd60e11b8152600490fd5b503461047e57602036600319011261047e57600435906001600160401b03821161047e5761084d6112056111ff36600486016124c5565b90613a24565b604051918291602083526101206112f46112de6112c76112b161129b61128561126f6112596112438c6101608c5191610140602082015201906125c6565b60208b01518d8203601f190160408f0152612686565b60408a01518c8203601f190160608e01526125c6565b60608901518b8203601f190160808d0152612686565b60808801518a8203601f190160a08c01526125c6565b60a0870151898203601f190160c08b01526125c6565b60c0860151888203601f190160e08a01526125c6565b60e0850151878203601f19016101008901526125c6565b610100840151868203601f1901848801526125c6565b910151838203601f19016101408501526125c6565b50604036600319011261047e5761131e6124af565b906024356001600160401b03811161098f573660238201121561098f5761134f9036906024816004013591016127c1565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115611506575b506114f7576113916159ca565b6040516352d1902d60e01b8152926001600160a01b0381169190602085600481865afa809585966114c3575b506113d657634c9c8ce360e01b84526004839052602484fd5b909184600080516020615ed483398151915281036114b15750813b1561149f57600080516020615ed483398151915280546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a2815183901561148557808360206104c795519101845af43d1561147d573d91611461836127a6565b9261146f6040519485612785565b83523d85602085013e615e72565b606091615e72565b505050346114905780f35b63b398979f60e01b8152600490fd5b634c9c8ce360e01b8452600452602483fd5b632a87526960e21b8552600452602484fd5b9095506020813d6020116114ef575b816114df60209383612785565b81010312610478575194386113bd565b3d91506114d2565b63703e46dd60e11b8252600482fd5b600080516020615ed4833981519152546001600160a01b03161415905038611384565b503461047e57602036600319011261047e576004356001600160401b03811161098f57806004018136039161014060031984011261047c57611569615c58565b6002546001600160a01b031691823b1561047857604051631214df6960e31b8152602060048201528590818161159f8580612b01565b6024830161014090526101648301906115b792612b32565b9681838160248a019a6115ca8c8b612b53565b8282036023190160448401526115e09190612b67565b6115ed60448c018b612b01565b8383036023190160648501526116039291612b32565b61161060648c018b612b53565b8282036023190160848401526116269190612b67565b61163360848c018b612b01565b8383036023190160a48501526116499291612b32565b61165660a48c018b612b01565b8383036023190160c485015261166c9291612b32565b61167960c48c018b612b01565b8383036023190160e485015261168f9291612b32565b61169c60e48c018b612b01565b838303602319016101048501526116b39291612b32565b6116c16101048c018b612b01565b838303602319016101248501526116d89291612b32565b6116e66101248c018b612b01565b838303602319016101448501526116fd9291612b32565b03925af180156106195761176a575b50508061171891612acf565b9190923593604219018412156104785761175b60047f711312583a392d65179bf949665a44f0e2c18f41e42330eae5d9103df6b7918d956110db93010180612acf565b906040519485943391866139d3565b8161177491612785565b61047857843861170c565b503461047e57602036600319011261047e57600435906001600160401b03821161047e5761084d6117bc6117b636600486016124c5565b906137c0565b6040519182916020835260a061184161182c6118166118006117ea865160c060208b015260e08a01906125c6565b6020870151898203601f190160408b01526125c6565b6040860151888203601f190160608a01526125c6565b6060850151878203601f190160808901526125c6565b6080840151868203601f1901848801526125c6565b910151838203601f190160c08501526125c6565b503461047e57602036600319011261047e5761186f6124af565b6118776159ca565b60018060a01b03166001600160601b0360a01b600154161760015580f35b503461047e57602036600319011261047e576004356001600160401b03811161098f576118c96118cf9136906004016124c5565b9061306b565b6040519182916020835261193a61192461190e6118f8845160c0602089015260e08801906125c6565b6020850151878203601f190160408901526125c6565b6040840151868203601f190160608801526125c6565b6060830151858203601f190160808701526125eb565b91608082015192601f198582030160a0860152835190818152602081016020808460051b84010196019380925b84841061198a57888061084d8a60a08b0151601f198483030160c08501526125c6565b919395969092949750601f19828203018452875160206119b38251604085526040850190612644565b910151916020818303910152815180825260208201906020808260051b850101940192865b8281106119fd5750505050506020806001929901940194019188979695939491611967565b9091929394601f9d9c9d1983820301855285516060611a4f611a3d611a2b84516080875260808701906125c6565b602085015186820360208801526125c6565b604084015185820360408701526125c6565b91015191606081830391015281519081815260208101906020808460051b8301019401928b915b818310611a9a5750505050506020809d9e9d600192970195019101929190926119d8565b9091929394602080611ab8600193601f198682030189528951612686565b9701950193019190611a76565b503461047e57604036600319011261047e57611adf612499565b336001600160a01b03821603611afb576104c790600435615bd6565b63334bd91960e11b8252600482fd5b503461047e57602036600319011261047e57611b246124af565b611b2c6159ca565b60018060a01b03166001600160601b0360a01b600254161760025580f35b503461047e57604036600319011261047e576104c7600435611b6a612499565b90611b866104bd82600052600060205260016040600020015490565b615b4b565b503461047e57602036600319011261047e576020611bb9600435600052600060205260016040600020015490565b604051908152f35b503461047e57611bd036612535565b611bdc9594929561594c565b600154604051630fe3478b60e31b815260206004820152946001600160a01b039091169290888680611c1260248201898c612b32565b0381875afa899681611e30575b50611c2c57610c52612e38565b8897604051602081019082848337611c586020828d86820190838201520301601f198101835282612785565b5190206040516020810190681050d512559055115160ba1b825260098152611c81602982612785565b51902003611cdb57505050508460208401525b803b1561047857611cc9858094610dc760405197889687958694633d5758e160e01b8652604060048701526044860190612a7a565b84810360031901602486015291612b32565b604051602081019082848337611d056020828d86820190838201520301601f198101835282612785565b51902060405160208101906a11115050d512559055115160aa1b8252600b8152611d30602b82612785565b51902003611d48575050505060016020840152611c94565b604051602081019082848337611d726020828d86820190838201520301601f198101835282612785565b51902060405160208101906614915593d2d15160ca1b825260078152611d99602782612785565b51902003611db1575050505060026020840152611c94565b611dd8602060405183819483830196873781018c838201520301601f198101835282612785565b5190206040516020810190691511549352539055115160b21b8252600a8152611e02602a82612785565b51902014611e12575b5050611c94565b611e24916003602087015236916127c1565b60808401523880611e0b565b611e459197503d808c833e6109268183612785565b9538611c1f565b503461047e5780611e5c36612461565b611e646158cf565b6003546001600160a01b0316803b156107c25760405163037f39e160e51b81526020600482015291839183918290849082906105f7906105e5611f43611f24611f05611ee6611ec7611eb68780612b01565b60c060248c015260e48b0191612b32565b611ed46020880188612b01565b8a83036023190160448c015290612b32565b611ef36040870187612b01565b8983036023190160648b015290612b32565b611f126060860186612b01565b8883036023190160848a015290612b32565b611f316080850185612b01565b8783036023190160a489015290612b32565b9160a0810190612b01565b503461047e576040611f5f366124f2565b919391611f766001600160a01b0386161515612c8d565b611f81811515612cd9565b611fa760208551838194838301968737810186838201520301601f198101835282612785565b519020815280602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b503461047e57611fe436612461565b611fee8180612acf565b90501561238d57602081016120038183612acf565b9050156123485760408201906120198284612acf565b905015612303576120286158cf565b6002546001600160a01b031690813b15610478576120b46120956120789461056261208e6120d295611ed46120878b602460c06040519d8e93636f13867560e01b85526020600486015280612b01565b929093015260e48d0191612b32565b918b612b01565b9188612b01565b6120a26060870187612b01565b86830360231901608488015290612b32565b6120c16080860186612b53565b8482036023190160a4860152612b67565b60a0840135601e19853603018112156122ff57918391858794016023198483030160c4850152612106602083019180612ba2565b8091926020855252604083019260408260051b820101938388925b8484106121c1575050505050508383809203925af180156121b65761217e575b5061216d817fb80b7feb5ab77629f88e8592b0889291da376e92b36781b4bf60a256c2af599292612acf565b6110db604051928392339184612c64565b826121ae7fb80b7feb5ab77629f88e8592b0889291da376e92b36781b4bf60a256c2af5992939461216d93612785565b929150612141565b6040513d85823e3d90fd5b92959194975092959750603f198282030184526121de8784612b53565b9060408101918c6121ef8280612ba2565b80919560408652526060840160608260051b8601019580935b83811061224c57505050505061223860019360209361222b848680960190612bf7565b9084818403910152612c0b565b98019401940190938a979592899795612121565b90919293966020806122f2600193605f198b820301885261226d8c88612be3565b906122e46122d96122ab6122926122848680612b01565b60a0875260a0870191612b32565b61229e88870187612b01565b908683038a880152612b32565b6122b760408601612bd6565b151560408501526122cb6060860186612b01565b908583036060870152612b32565b926080810190612b01565b916080818503910152612b32565b9901959401929101612208565b8580fd5b60405162461bcd60e51b815260206004820152601c60248201527f536368656d61207469746c652063616e6e6f7420626520656d707479000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f536368656d612055524c2063616e6e6f7420626520656d7074790000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f536368656d612049442063616e6e6f7420626520656d707479000000000000006044820152606490fd5b503461047e578060031936011261047e5760206001600160401b03600080516020615ef483398151915254161515604051908152f35b90503461098f57602036600319011261098f5760043563ffffffff60e01b811680910361245d5760209250637965db0b60e01b811490811561244c575b5015158152f35b6301ffc9a760e01b14905038612445565b8280fd5b602060031982011261249457600435906001600160401b0382116124945760c09082900360031901126124945760040190565b600080fd5b602435906001600160a01b038216820361249457565b600435906001600160a01b038216820361249457565b9181601f84011215612494578235916001600160401b038311612494576020838186019501011161249457565b906040600319830112612494576004356001600160a01b03811681036124945791602435906001600160401b03821161249457612531916004016124c5565b9091565b6060600319820112612494576004356001600160401b038111612494578161255f916004016124c5565b929092916024356001600160401b0381116124945781612581916004016124c5565b92909291604435906001600160401b03821161249457612531916004016124c5565b60005b8381106125b65750506000910152565b81810151838201526020016125a6565b906020916125df815180928185528580860191016125a3565b601f01601f1916010190565b9080602083519182815201916020808360051b8301019401926000915b83831061261757505050505090565b9091929394602080612635600193601f1986820301875289516125c6565b97019301930191939290612608565b61268391604061267261266084516060855260608501906125c6565b602085015184820360208601526125c6565b9201519060408184039101526125c6565b90565b61268391602061269f83516040845260408401906125c6565b9201519060208184039101526125c6565b60a081019081106001600160401b038211176126cb57604052565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b038211176126cb57604052565b606081019081106001600160401b038211176126cb57604052565b604081019081106001600160401b038211176126cb57604052565b61014081019081106001600160401b038211176126cb57604052565b6101c081019081106001600160401b038211176126cb57604052565b602081019081106001600160401b038211176126cb57604052565b90601f801991011681019081106001600160401b038211176126cb57604052565b6001600160401b0381116126cb57601f01601f191660200190565b9291926127cd826127a6565b916127db6040519384612785565b829481845281830111612494578281602093846000960137010152565b6003111561280257565b634e487b7160e01b600052602160045260246000fd5b61289661288461287261286061284e61283c86516101c089526101c08901906125eb565b602087015188820360208a01526125c6565b604086015187820360408901526125c6565b606085015186820360608801526125c6565b608084015185820360808701526125c6565b60a083015184820360a08601526125c6565b60c0820151151560c084015260e08201519083810360e0850152815180825260208201916020808360051b8301019401926000915b8383106129e757505050505061294e61293a6129266129126128fe6101a0956101008801518982036101008b01526125eb565b6101208701518882036101208a01526125eb565b6101408601518782036101408901526125eb565b6101608501518682036101608801526125eb565b6101808401518582036101808701526125eb565b910151916101a0818303910152815180825260208201916020808360051b8301019401926000915b83831061298557505050505090565b90919293946020806129d8600193601f1986820301875289519060406129c76129b784516060855260608501906125c6565b86850151848203888601526125c6565b9201519060408184039101526125eb565b97019301930191939290612976565b9091929394602080600192601f19858203018652885190608080612a4f612a3d612a1a865160a0875260a08701906125c6565b87870151612a27816127f8565b88870152604087015186820360408801526125c6565b606086015185820360608701526125c6565b93015191612a5c836127f8565b0152970193019301919392906128cb565b9060048210156128025752565b612683916080610b68612abd612a99855160a0865260a08601906125c6565b612aab60208701516020870190612a6d565b604086015185820360408701526125c6565b606085015184820360608601526125c6565b903590601e198136030182121561249457018035906001600160401b0382116124945760200191813603831361249457565b9035601e19823603018112156124945701602081359101916001600160401b03821161249457813603831361249457565b908060209392818452848401376000828201840152601f01601f1916010190565b9035603e1982360301811215612494570190565b61268391612b94612b89612b7b8480612b01565b604085526040850191612b32565b926020810190612b01565b916020818503910152612b32565b9035601e19823603018112156124945701602081359101916001600160401b038211612494578160051b3603831361249457565b3590811515820361249457565b9035609e1982360301811215612494570190565b9035605e1982360301811215612494570190565b61268391612c56612c4b612c30612c228580612b01565b606086526060860191612b32565b612c3d6020860186612b01565b908583036020870152612b32565b926040810190612b01565b916040818503910152612b32565b91602091612c7d91959495604085526040850191612b32565b6001600160a01b03909416910152565b15612c9457565b60405162461bcd60e51b815260206004820152601d60248201527f54617267657420616464726573732063616e6e6f74206265207a65726f0000006044820152606490fd5b15612ce057565b60405162461bcd60e51b815260206004820152601960248201527f526f6c6520747970652063616e6e6f7420626520656d707479000000000000006044820152606490fd5b81601f82011215612494578051612d3b816127a6565b92612d496040519485612785565b818452602082840101116124945761268391602080850191016125a3565b602081830312612494578051906001600160401b038211612494570160a0818303126124945760405191612d9a836126b0565b81516001600160401b0381116124945781612db6918401612d25565b83526020820151600481101561249457602084015260408201516001600160401b0381116124945781612dea918401612d25565b604084015260608201516001600160401b0381116124945781612e0e918401612d25565b606084015260808201516001600160401b03811161249457612e309201612d25565b608082015290565b60009060033d11612e4557565b905060046000803e60005160e01c90565b600060443d10612683576040513d600319016004823e8051913d60248401116001600160401b03841117612ec357828201928351916001600160401b038311612ebb573d84016003190185840160200111612ebb575061268392910160200190612785565b949350505050565b92915050565b60405190612ed6826126e1565b606060a08382815282602082015282604082015282808201528260808201520152565b6001600160401b0381116126cb5760051b60200190565b9080601f83011215612494578151612f2781612ef9565b92612f356040519485612785565b81845260208085019260051b820101918383116124945760208201905b838210612f6157505050505090565b81516001600160401b03811161249457602091612f8387848094880101612d25565b815201910190612f52565b91906060838203126124945760405190612fa7826126fc565b819380516001600160401b0381116124945782612fc5918301612d25565b835260208101516001600160401b0381116124945782612fe6918301612d25565b60208401526040810151916001600160401b0383116124945760409261300c9201612d25565b910152565b9190604083820312612494576040519061302a82612717565b819380516001600160401b0381116124945782613048918301612d25565b83526020810151916001600160401b0383116124945760209261300c9201612d25565b600091613076612ec9565b5060018060a01b0360035416906040516102205263f1a03f1b60e01b6102205152602060046102205101526130bb610220519361022051926024610220510191612b32565b039061022051905afa8060009161315b575b612683576130d9612e38565b6308c379a014613148575b60405162461bcd60e51b815260206004820152603660248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205a4b604482015275140818dc9959195b9d1a585b081c995d1c9a595d985b60521b6064820152608490fd5b613150612e56565b80610cd357506130e4565b903d610200526102005181610220513e61317b6102005161022051612785565b602061022051610200516102205101031261047e5761022051516101e0526001600160401b036101e0511161047e5760c06101e0516102205101610200516102205101031261047e57604051906131d1826126e1565b6101e0516102205101516001600160401b03811161098f5761320690610200516102205101906101e051610220510101612d25565b825260206101e051610220510101516001600160401b03811161098f5761324090610200516102205101906101e051610220510101612d25565b602083015260406101e051610220510101516001600160401b03811161098f5761327d90610200516102205101906101e051610220510101612d25565b604083015260606101e051610220510101516001600160401b03811161098f576132ba90610200516102205101906101e051610220510101612f10565b606083015260806101e05161022051010151610160526001600160401b03610160511161047e57610200516102205101601f610160516101e05161022051010101121561047e57610160516101e051610220510101516101a0526133336133236101a051612ef9565b6040516101c0526101c051612785565b6101c051610140526101a0516101c0515260206101c051016101405261020051610220510160206101a05160051b610160516101e05161022051010101011161047e576020610160516101e05161022051010101610180525b60206101a05160051b610160516101e051610220510101010161018051106133fc576101c051608083015260a06101e05161022051010151906001600160401b03821161047e57506133f190610200516102205101906101e051610220510101612d25565b60a0820152906130cd565b61018051516001600160401b03811161098f57610160516101e0516102205101010160a0526040601f1960a05161020051610220510103011261047e576040516101205261344c61012051612717565b602060a05101516001600160401b03811161098f5761347b9060206102005161022051019160a0510101612f8e565b6101205152604060a05101516080526001600160401b036080511161047e57610200516102205101601f602060805160a051010101121561047e57602060805160a05101015160e0526134e26134d260e051612ef9565b6040516101005261010051612785565b610100515060e051610100515260206101005101610200516102205101602060e05160051b8160805160a051010101011161098f5760805160a0510160400160c0525b602060e05160051b8160805160a0510101010160c0511061357157506101005160206101205101526101205161014051526020610140510161014052602061018051016101805261338c565b60c051516001600160401b03811161245d576080601f19826020835160a05101010161020051610220510103011261245d5760405190608082018281106001600160401b038211176137ac57604090815260805160a05101820101516001600160401b038111610478576135fd90602061020051610220510191848260805160a0510101010101612d25565b825260805160a051018101606001516001600160401b0381116104785761363c90602061020051610220510191848260805160a0510101010101612d25565b60208301526080805160a05101820101516001600160401b0381116104785761367d90602061020051610220510191848260805160a0510101010101612d25565b60408301526080816020825160a0510101010151906001600160401b03821161047857610200516102205101601f602084848260805160a05101010101010112156104785760805160a0510181018201604001516136da81612ef9565b926136e86040519485612785565b818452602084019061020051610220510160208460051b8184888260805160a05101010101010101116137a85760805160a0510184018101606001915b60805160a0516060910186018301600586901b0101831061376057505050505090602092916060820152815201602060c0510160c052613525565b82516001600160401b0381116137a4576020916137998392836102005161022051019181888c8260805160a05101010101010101613011565b815201920191613725565b8980fd5b8780fd5b634e487b7160e01b85526041600452602485fd5b600090613805926137cf612ec9565b5060035460405163533b3a9560e01b8152602060048201529485936001600160a01b039092169284928392916024840191612b32565b03915afa80916000916138b4575b509061268357613821612e38565b6308c379a0146138a1575b60405162461bcd60e51b815260206004820152604160248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205a4b60448201527f502063726564656e7469616c20646566696e6974696f6e2072657472696576616064820152601b60fa1b608482015260a490fd5b6138a9612e56565b80610cd3575061382c565b3d8083833e6138c38183612785565b81019060208183031261245d578051906001600160401b03821161047c57019160c08383031261047e57604051926138fa846126e1565b80516001600160401b03811161245d5783613916918301612d25565b845260208101516001600160401b03811161245d5783613937918301612d25565b602085015260408101516001600160401b03811161245d578361395b918301612d25565b604085015260608101516001600160401b03811161245d578361397f918301612d25565b606085015260808101516001600160401b03811161245d57836139a3918301612d25565b608085015260a0810151916001600160401b03831161047e57506139c8929101612d25565b60a082015238613813565b906139ed9061268396949593606084526060840191612b32565b6001600160a01b039094166020820152808403604090910152612b32565b60405190613a1882612717565b60606020838281520152565b600090613ab992604051613a3781612732565b60608152613a43613a0b565b602082015260606040820152613a57613a0b565b606082015260606080820152606060a0820152606060c0820152606060e0820152606061010082015260606101208201525060018060a01b036002541690604051809581948293633ab74f4360e21b8452602060048501526024840191612b32565b03915afa8091600091613b54575b509061268357613ad5612e38565b6308c379a014613b41575b60405162461bcd60e51b815260206004820152603360248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205643604482015272081b595d1859185d18481c995d1c9a595d985b606a1b6064820152608490fd5b613b49612e56565b80610cd35750613ae0565b3d8083833e613b638183612785565b81019060208183031261245d578051906001600160401b03821161047c5701916101408383031261047e5760405192613b9b84612732565b80516001600160401b03811161245d5783613bb7918301612d25565b845260208101516001600160401b03811161245d5783613bd8918301613011565b602085015260408101516001600160401b03811161245d5783613bfc918301612d25565b604085015260608101516001600160401b03811161245d5783613c20918301613011565b606085015260808101516001600160401b03811161245d5783613c44918301612d25565b608085015260a08101516001600160401b03811161245d5783613c68918301612d25565b60a085015260c08101516001600160401b03811161245d5783613c8c918301612d25565b60c085015260e08101516001600160401b03811161245d5783613cb0918301612d25565b60e08501526101008101516001600160401b03811161245d5783613cd5918301612d25565b610100850152610120810151916001600160401b03831161047e5750613cfc929101612d25565b61012082015238613ac7565b5190811515820361249457565b91906101c08382031261249457604051613d2e8161274e565b809380516001600160401b0381116124945783613d4c918301612f10565b825260208101516001600160401b0381116124945783613d6d918301612d25565b602083015260408101516001600160401b0381116124945783613d91918301612d25565b604083015260608101516001600160401b0381116124945783613db5918301612d25565b606083015260808101516001600160401b0381116124945783613dd9918301612d25565b608083015260a08101516001600160401b0381116124945783613dfd918301612d25565b60a0830152613e0e60c08201613d08565b60c083015260e08101516001600160401b03811161249457810183601f8201121561249457805190613e3f82612ef9565b91613e4d6040519384612785565b80835260208084019160051b830101918683116124945760208101915b838310614053575050505060e08301526101008101516001600160401b0381116124945783613e9a918301612f10565b6101008301526101208101516001600160401b0381116124945783613ec0918301612f10565b6101208301526101408101516001600160401b0381116124945783613ee6918301612f10565b6101408301526101608101516001600160401b0381116124945783613f0c918301612f10565b6101608301526101808101516001600160401b0381116124945783613f32918301612f10565b6101808301526101a0810151906001600160401b03821161249457019180601f8401121561249457825192613f6684612ef9565b93613f746040519586612785565b80855260208086019160051b830101918383116124945760208101915b838310613fa45750505050506101a00152565b82516001600160401b038111612494578201906060828703601f1901126124945760405190613fd2826126fc565b60208301516001600160401b03811161249457876020613ff492860101612d25565b825260408301516001600160401b0381116124945787602061401892860101612d25565b60208301526060830151916001600160401b0383116124945761404388602080969581960101612f10565b6040820152815201920191613f91565b82516001600160401b0381116124945782019060a0828a03601f1901126124945760405191614081836126b0565b60208101516001600160401b038111612494578a60206140a392840101612d25565b83526040810151600381101561249457602084015260608101516001600160401b038111612494578a60206140da92840101612d25565b60408401526080810151906001600160401b038211612494576141048b602060a094840101612d25565b60608501520151906003821015612494578260209392608085940152815201920191613e6a565b6000906141e69260405161413e81612717565b60405161414a8161274e565b60608152606060208201526060604082015260608082015260606080820152606060a08201528460c0820152606060e08201526060610100820152606061012082015260606101408201526060610160820152606061018082015260606101a082015281528360208201525060018060a01b036001541690604051809581948293631f32da9960e21b8452602060048501526024840191612b32565b03915afa60009181614200575b5061268357610c52612e38565b90913d8082843e6142118184612785565b82019160208184031261098f578051906001600160401b03821161245d570160408184031261098f576040519261424784612717565b81516001600160401b03811161047c5782916142669160209401613d15565b8452015190600482101561047e5750602082015290386141f3565b929061429a906126839593604086526040860191612b32565b926020818503910152612b32565b90602083828152019260208260051b82010193836000925b8484106142d05750505050505090565b9091929394956020806142f8600193601f198682030188526142f28b88612b01565b90612b32565b98019401940192949391906142c0565b9080601f8301121561249457816020612683933591016127c1565b9080601f8301121561249457813561433a81612ef9565b926143486040519485612785565b81845260208085019260051b820101918383116124945760208201905b83821061437457505050505090565b81356001600160401b0381116124945760209161439687848094880101614308565b815201910190614365565b9060606143ac61594c565b600154604080516310a2351160e11b81526004810191909152906001600160a01b03168161449961447a61445b61443d61441e6143ff6143ec8c80612ba2565b6101c060448a01526102048901916142a8565b61440c60208d018d612b01565b8883036043190160648a015290612b32565b61442b60408c018c612b01565b87830360431901608489015290612b32565b614449888b018b612b01565b8683036043190160a488015290612b32565b61446860808a018a612b01565b8583036043190160c487015290612b32565b61448760a0890189612b01565b8483036043190160e486015290612b32565b6144a560c08801612bd6565b15156101048301526144ba60e0880188612ba2565b604319848403016101248501528083526020830160208260051b85010193836000915b8483106153ab5750505050505061457e61455d61453c61451b61459f946145086101008d018d612ba2565b888303604319016101448a0152906142a8565b6145296101208c018c612ba2565b87830360431901610164890152906142a8565b61454a6101408b018b612ba2565b86830360431901610184880152906142a8565b61456b6101608a018a612ba2565b858303604319016101a4870152906142a8565b61458c610180890189612ba2565b848303604319016101c4860152906142a8565b6145ad6101a0880188612ba2565b604319848403016101e4850152808352602083019260208260051b82010193836000925b8a85851061531f5750505050505050918160008160209533602483015203925af1600091816152e3575b5061468757614608612e38565b6308c379a014614674575b60405162461bcd60e51b815260206004820152603360248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e6720646f60448201527231bab6b2b73a103932b3b4b9ba3930ba34b7b760691b6064820152608490fd5b61467c612e56565b80610cd35750614613565b1561529e577f44ca9609d2fe597457041d7e98533a969452ef425c10a46d0dd9f074497ea1ba6146ba6020850185612acf565b6146cb604051928392339184612c64565b0390a16101c08336031261249457604051926146e68461274e565b80356001600160401b038111612494576147039036908301614323565b845260208101356001600160401b038111612494576147259036908301614308565b602085015260408101356001600160401b0381116124945761474a9036908301614308565b6040850152818101356001600160401b0381116124945761476e9036908301614308565b8285015260808101356001600160401b038111612494576147929036908301614308565b608085015260a08101356001600160401b038111612494576147b79036908301614308565b60a08501526147c860c08201612bd6565b60c085015260e08101356001600160401b0381116124945736601f82840101121561249457808201356147fa81612ef9565b916148086040519384612785565b81835260208301903660208460051b83880101011161249457602081860101915b60208460051b838801010183106151c8575050505060e08501526101008101356001600160401b038111612494576148649036908301614323565b6101008501526101208101356001600160401b0381116124945761488b9036908301614323565b6101208501526101408101356001600160401b038111612494576148b29036908301614323565b6101408501526101608101356001600160401b038111612494576148d99036908301614323565b6101608501526101808101356001600160401b038111612494576149009036908301614323565b6101808501526101a08101356001600160401b0381116124945736601f82840101121561249457808201359061493582612ef9565b926149436040519485612785565b82845260208401913660208560051b83850101011161249457602081830101925b60208560051b838501010184106151125750505050506101a0840152614988615d25565b926000935b60e08201518051861015614b8f57856149a591615d44565b518051614adb6011601860208501516149bd816127f8565b604086015195601e60808b830151920151916149d8836127f8565b6027604051998a95602087019a663d9134b2111d1160c91b8c52614a05815180926020878c0191016125a3565b8701906c11161135b2bcaa3cb832911d1160991b84830152614a26816127f8565b60f81b60348201526f11161131b7b73a3937b63632b9111d1160811b6035820152614a5b8251809360206045850191016125a3565b01017f222c227075626c69634b65794d756c746962617365223a22000000000000000083820152614a968251809360206036850191016125a3565b0101906d11161130baba342a3cb832911d1160911b84830152614ab8816127f8565b60f81b602682015261227d60f01b60278201520301600e19810185520183612785565b60e084015151600019810193908411614b79576020614b3d93614b4c82614b5b958c60019960009110600014614b635750614b14615d6e565b935b6040519887614b2e8b9951809287808d0191016125a3565b880191518093858401906125a3565b010191828151948592016125a3565b0103601f198101835282612785565b94019361498d565b60405190614b718483612785565b815293614b16565b634e487b7160e01b600052601160045260246000fd5b5092935090614bcd6001602060405186614bb282985180928580860191016125a3565b8101605d60f81b838201520301601e19810186520184612785565b614bd5615d25565b936000945b6101a08401518051871015614cff57614bf587602792615d44565b51614cbd600260158351936011614c1460406020840151930151615d8d565b6040519788936020850198663d9134b2111d1160c91b8a52614c3f815180926020868a0191016125a3565b85017011161139b2b93b34b1b2aa3cb832911d1160791b83820152614c6e8251809360206038850191016125a3565b010174222c2273657276696365456e64706f696e74223a5b60581b83820152614ca18251809360206026850191016125a3565b0101615d7d60f01b838201520301601d19810185520183612785565b6101a086015151600019810193908411614b79576020614b3d93614b4c82614cf7958d60019960009110600014614b635750614b14615d6e565b950194614bda565b5091909450614d3d6001602060405185614d2282975180928580860191016125a3565b8101605d60f81b838201520301601e19810185520183612785565b614d478351615d8d565b926020810151946040820151928201519060808301519060a08401519060c085015115156000906000146150ec5750604051614d84604082612785565b60048152637472756560e01b60208201525b610100860151614da590615d8d565b92610120870151614db590615d8d565b94610140880151614dc590615d8d565b96610160890151614dd590615d8d565b986101800151614de490615d8d565b996040519d8e9d8e6b7b22636f6e74657874223a5b60a01b602082015281519182602c83019160200191614e17926125a3565b01672e961134b2111d1160c11b602c82015281519182603483019160200191614e3f926125a3565b01602c016f11161131b7b73a3937b63632b9111d1160811b600882015281519182601883019160200191614e72926125a3565b016008016c11161131b932b0ba32b2111d1160991b601082015281519182601d83019160200191614ea2926125a3565b016010016c1116113ab83230ba32b2111d1160991b600d82015281519182601a83019160200191614ed2926125a3565b01600d016e1116113b32b939b4b7b724b2111d1160891b600d82015281519182601c83019160200191614f04926125a3565b01600d016f1116113232b0b1ba34bb30ba32b2111d60811b600f82015281519182601f83019160200191614f37926125a3565b01600f017516113b32b934b334b1b0ba34b7b726b2ba3437b2111d60511b601082015281519182602683019160200191614f70926125a3565b01601001732c22617373657274696f6e4d6574686f64223a5b60601b601682015281519182602a83019160200191614fa7926125a3565b01601601735d2c2261757468656e7469636174696f6e223a5b60601b601482015281519182602883019160200191614fde926125a3565b01601401715d2c226b657941677265656d656e74223a5b60701b601482015281519182602683019160200191615013926125a3565b01601401601281017f5d2c226361706162696c697479496e766f636174696f6e223a5b000000000000905281519182602c83019160200191615054926125a3565b01601201601a81017f5d2c226361706162696c69747944656c65676174696f6e223a5b000000000000905281519182603483019160200191615095926125a3565b01601a016c2e961139b2b93b34b1b2b9911d60991b601a820152815191826027830191602001916150c5926125a3565b01601a01600d8101607d60f81b905203600d01601e19810182526001016126839082612785565b506040516150fb604082612785565b600581526466616c736560d81b6020820152614d96565b83356001600160401b03811161249457828401019087601f1983360301126124945760405191615141836126fc565b60208101356001600160401b038111612494576151649060203691840101614308565b835260408101356001600160401b038111612494576151899060203691840101614308565b602084015288810135916001600160401b038311612494576020936151b685949385809536920101614323565b60408201528152019401939050614964565b82356001600160401b038111612494578287010160a0601f19823603011261249457604051906151f7826126b0565b60208101356001600160401b0381116124945761521a9060203691840101614308565b825260408101356003811015612494576020830152888101356001600160401b038111612494576152519060203691840101614308565b60408301526080810135906001600160401b0382116124945761527c60a09260203691840101614308565b8a84015201356003811015612494576080820152815260209283019201614829565b60405162461bcd60e51b815260206004820152601c60248201527f446f63756d656e7420726567697374726174696f6e206661696c6564000000006044820152606490fd5b9091506020813d602011615317575b816152ff60209383612785565b810103126124945761531090613d08565b90386145fb565b3d91506152f2565b86985061539960209294969891839261538b61538061536761534f6001999b9d8d601f198d88030190528c612bf7565b9461535a8680612b01565b9091808752860191612b32565b61537387860186612b01565b9085830389870152612b32565b926040810190612ba2565b9160408185039101526142a8565b980194019401918896959394916145d1565b9193959092949650601f198282030185526153c68784612be3565b906153e26153d48380612b01565b60a0845260a0840191612b32565b60208301359060038210156124945761542461543e91836154046080956127f8565b60208601526154166040870187612b01565b908683036040880152612b32565b8d61543181870187612b01565b9186840390870152612b32565b920135906003821015612494576001928260806020949361545f86956127f8565b0152980195019301909188969593926144dd565b6000906154f192604051615486816126e1565b6060815260606020820152606060408201526060808201526154a6613a0b565b60808201526040516154b78161276a565b6060815260a08201525060018060a01b03600254169060405180958194829363a5dba8d160e01b8452602060048501526024840191612b32565b03915afa60009181615588575b506126835761550b612e38565b6308c379a014615575575b60405162461bcd60e51b815260206004820152603160248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205643604482015270081cd8da195b58481c995d1c9a595d985b607a1b6064820152608490fd5b61557d612e56565b80610cd35750615516565b90913d8082843e6155998184612785565b82019160208184031261098f578051906001600160401b03821161245d57019160c08382031261098f57604051926155d0846126e1565b80516001600160401b03811161047c57826155ec918301612d25565b845260208101516001600160401b03811161047c578261560d918301612d25565b602085015260408101516001600160401b03811161047c5782615631918301612d25565b604085015260608101516001600160401b03811161047c5782615655918301612d25565b606085015260808101516001600160401b03811161047c5782615679918301613011565b608085015260a0810151906001600160401b03821161047c57019160208383031261047e57604051926156ab8461276a565b8051906001600160401b03821161245d570182601f8201121561098f578051916156d483612ef9565b936156e26040519586612785565b83855260208086019460051b8401019281841161245d5760208101945b84861061571a57505050505050815260a082015290386154fe565b85516001600160401b0381116104785782016040818503601f190112610478576040519061574782612717565b60208101516001600160401b038111610dda5760209082010185601f82011215610dda57805161577681612ef9565b916157846040519384612785565b81835260208084019260051b820101908882116137a45760208101925b8284106157e4575050505082526040810151906001600160401b038211610dda57916157d586602080969481960101612f8e565b838201528152019501946156ff565b83516001600160401b038111610f3b57820160a0818c03601f190112610f3b5760405190615811826126b0565b60208101516001600160401b0381116158cb578c602061583392840101612d25565b825260408101516001600160401b0381116158cb578c602061585792840101612d25565b602083015261586860608201613d08565b604083015260808101516001600160401b0381116158cb578c602061588f92840101612d25565b606083015260a0810151906001600160401b0382116158cb57916158bb8d602080969481960101612d25565b60808201528152019301926157a1565b8d80fd5b3360009081527fdafeb786b047e76e663d4d6952973157a38059e0c0c7a41302eb3236df7c35b2602052604090205460ff161561590857565b606460405162461bcd60e51b815260206004820152602060248201527f43616c6c657220646f6573206e6f7420686176652049737375657220726f6c656044820152fd5b3360009081527fc02ed0d104e6f56642aedb0c4c6aa390edefb8c290f43712e5416e8e2a7577e1602052604090205460ff161561598557565b60405162461bcd60e51b815260206004820152601d60248201527f43616c6c657220646f6573206e6f7420686176652054415320726f6c650000006044820152606490fd5b3360009081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff1615615a0357565b63e2517d3f60e01b600052336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260446000fd5b60008181526020818152604080832033845290915290205460ff1615615a5f5750565b63e2517d3f60e01b6000523360045260245260446000fd5b6001600160a01b03811660009081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff16615b45576001600160a01b031660008181527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec60205260408120805460ff191660011790553391907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50600090565b6000818152602081815260408083206001600160a01b038616845290915290205460ff16615bcf576000818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5050600090565b6000818152602081815260408083206001600160a01b038616845290915290205460ff1615615bcf576000818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b3360009081527fc02ed0d104e6f56642aedb0c4c6aa390edefb8c290f43712e5416e8e2a7577e1602052604090205460ff168015615ced575b15615c9857565b60405162461bcd60e51b815260206004820152602760248201527f43616c6c657220646f6573206e6f74206861766520544153206f722049737375604482015266657220726f6c6560c81b6064820152608490fd5b503360009081527fdafeb786b047e76e663d4d6952973157a38059e0c0c7a41302eb3236df7c35b2602052604090205460ff16615c91565b60405190615d34604083612785565b60018252605b60f81b6020830152565b8051821015615d585760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b60405190615d7d604083612785565b60018252600b60fa1b6020830152565b90602091604051615d9e8482612785565b60008152926000935b8251851015615e6c57615dba8584615d44565b518351600019810192908311614b79576001615e4e9181946000908a10600014615e56575081615de8615d6e565b876040519684615e01899651809285808a0191016125a3565b8501601160f91b83820152615e1f82518093856021850191016125a3565b0101601160f91b83820152615e3d825180938b6002850191016125a3565b01010301601f198101835282612785565b940193615da7565b6040518391615e658983612785565b8152615de8565b93505050565b90615e985750805115615e8757805190602001fd5b63d6bda27560e01b60005260046000fd5b81511580615eca575b615ea9575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b15615ea156fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220ac8c4da270fe76341d2ae394ea44be66ff2181c112e51c26154bac8044fff63e64736f6c634300081b0033";

    private static String librariesLinkedBinary;

    public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";

    public static final String FUNC_UPGRADE_INTERFACE_VERSION = "UPGRADE_INTERFACE_VERSION";

    public static final String FUNC_GETDIDDOC = "getDidDoc";

    public static final String FUNC_GETDIDDOCSTATUS = "getDidDocStatus";

    public static final String FUNC_GETROLEADMIN = "getRoleAdmin";

    public static final String FUNC_GETVCSCHEMA = "getVcSchema";

    public static final String FUNC_GETVCMETADATA = "getVcmetaData";

    public static final String FUNC_GETZKPCREDENTIAL = "getZKPCredential";

    public static final String FUNC_GETZKPCREDENTIALDEFINITION = "getZKPCredentialDefinition";

    public static final String FUNC_GRANTROLE = "grantRole";

    public static final String FUNC_HASINITIALIZED = "hasInitialized";

    public static final String FUNC_HASROLE = "hasRole";

    public static final String FUNC_INITIALIZE = "initialize";

    public static final String FUNC_ISHAVEROLE = "isHaveRole";

    public static final String FUNC_PROXIABLEUUID = "proxiableUUID";

    public static final String FUNC_REGISTDIDDOC = "registDidDoc";

    public static final String FUNC_REGISTROLE = "registRole";

    public static final String FUNC_REGISTVCMETADATA = "registVcMetaData";

    public static final String FUNC_REGISTVCSCHEMA = "registVcSchema";

    public static final String FUNC_REGISTZKPCREDENTIAL = "registZKPCredential";

    public static final String FUNC_REGISTZKPCREDENTIALDEFINITION = "registZKPCredentialDefinition";

    public static final String FUNC_RENOUNCEROLE = "renounceRole";

    public static final String FUNC_REVOKEROLE = "revokeRole";

    public static final String FUNC_SETDOCUMENTSTORAGE = "setDocumentStorage";

    public static final String FUNC_SETVCMETASTORAGE = "setVcMetaStorage";

    public static final String FUNC_SETZKPSTORAGE = "setZKPStorage";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_UPDATEDIDDOCSTATUSINSERVICE = "updateDidDocStatusInService";

    public static final String FUNC_UPDATEDIDDOCSTATUSREVOCATION = "updateDidDocStatusRevocation";

    public static final String FUNC_UPDATEVCSTATS = "updateVcStats";

    public static final String FUNC_UPGRADETOANDCALL = "upgradeToAndCall";

    public static final CustomError ACCESSCONTROLBADCONFIRMATION_ERROR = new CustomError("AccessControlBadConfirmation", 
            Arrays.<TypeReference<?>>asList());
    ;

    public static final CustomError ACCESSCONTROLUNAUTHORIZEDACCOUNT_ERROR = new CustomError("AccessControlUnauthorizedAccount", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Bytes32>() {}));
    ;

    public static final CustomError ADDRESSEMPTYCODE_ERROR = new CustomError("AddressEmptyCode", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final CustomError ERC1967INVALIDIMPLEMENTATION_ERROR = new CustomError("ERC1967InvalidImplementation", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final CustomError ERC1967NONPAYABLE_ERROR = new CustomError("ERC1967NonPayable", 
            Arrays.<TypeReference<?>>asList());
    ;

    public static final CustomError FAILEDCALL_ERROR = new CustomError("FailedCall", 
            Arrays.<TypeReference<?>>asList());
    ;

    public static final CustomError INVALIDINITIALIZATION_ERROR = new CustomError("InvalidInitialization", 
            Arrays.<TypeReference<?>>asList());
    ;

    public static final CustomError NOTINITIALIZING_ERROR = new CustomError("NotInitializing", 
            Arrays.<TypeReference<?>>asList());
    ;

    public static final CustomError UUPSUNAUTHORIZEDCALLCONTEXT_ERROR = new CustomError("UUPSUnauthorizedCallContext", 
            Arrays.<TypeReference<?>>asList());
    ;

    public static final CustomError UUPSUNSUPPORTEDPROXIABLEUUID_ERROR = new CustomError("UUPSUnsupportedProxiableUUID", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event DIDCREATED_EVENT = new Event("DIDCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event DIDDEACTIVATED_EVENT = new Event("DIDDeactivated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event DIDUPDATED_EVENT = new Event("DIDUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event INITIALIZED_EVENT = new Event("Initialized", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {}));
    ;

    public static final Event ROLEADMINCHANGED_EVENT = new Event("RoleAdminChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event ROLEGRANTED_EVENT = new Event("RoleGranted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event ROLEREVOKED_EVENT = new Event("RoleRevoked", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event SETUP_EVENT = new Event("Setup", 
            Arrays.<TypeReference<?>>asList());
    ;

    public static final Event UPGRADED_EVENT = new Event("Upgraded", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event VCISSUED_EVENT = new Event("VCIssued", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event VCSCHEMACREATED_EVENT = new Event("VCSchemaCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event VCSTATUS_EVENT = new Event("VCStatus", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}));
    ;

    @Deprecated
    protected OpenDID(String contractAddress, Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected OpenDID(String contractAddress, Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected OpenDID(String contractAddress, Web3j web3j, TransactionManager transactionManager,
            BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected OpenDID(String contractAddress, Web3j web3j, TransactionManager transactionManager,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<DIDCreatedEventResponse> getDIDCreatedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(DIDCREATED_EVENT, transactionReceipt);
        ArrayList<DIDCreatedEventResponse> responses = new ArrayList<DIDCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DIDCreatedEventResponse typedResponse = new DIDCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.did = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.controller = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static DIDCreatedEventResponse getDIDCreatedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(DIDCREATED_EVENT, log);
        DIDCreatedEventResponse typedResponse = new DIDCreatedEventResponse();
        typedResponse.log = log;
        typedResponse.did = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.controller = (String) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<DIDCreatedEventResponse> dIDCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getDIDCreatedEventFromLog(log));
    }

    public Flowable<DIDCreatedEventResponse> dIDCreatedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DIDCREATED_EVENT));
        return dIDCreatedEventFlowable(filter);
    }

    public static List<DIDDeactivatedEventResponse> getDIDDeactivatedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(DIDDEACTIVATED_EVENT, transactionReceipt);
        ArrayList<DIDDeactivatedEventResponse> responses = new ArrayList<DIDDeactivatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DIDDeactivatedEventResponse typedResponse = new DIDDeactivatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.did = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.controller = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static DIDDeactivatedEventResponse getDIDDeactivatedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(DIDDEACTIVATED_EVENT, log);
        DIDDeactivatedEventResponse typedResponse = new DIDDeactivatedEventResponse();
        typedResponse.log = log;
        typedResponse.did = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.controller = (String) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<DIDDeactivatedEventResponse> dIDDeactivatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getDIDDeactivatedEventFromLog(log));
    }

    public Flowable<DIDDeactivatedEventResponse> dIDDeactivatedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DIDDEACTIVATED_EVENT));
        return dIDDeactivatedEventFlowable(filter);
    }

    public static List<DIDUpdatedEventResponse> getDIDUpdatedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(DIDUPDATED_EVENT, transactionReceipt);
        ArrayList<DIDUpdatedEventResponse> responses = new ArrayList<DIDUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DIDUpdatedEventResponse typedResponse = new DIDUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.did = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.controller = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static DIDUpdatedEventResponse getDIDUpdatedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(DIDUPDATED_EVENT, log);
        DIDUpdatedEventResponse typedResponse = new DIDUpdatedEventResponse();
        typedResponse.log = log;
        typedResponse.did = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.controller = (String) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<DIDUpdatedEventResponse> dIDUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getDIDUpdatedEventFromLog(log));
    }

    public Flowable<DIDUpdatedEventResponse> dIDUpdatedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DIDUPDATED_EVENT));
        return dIDUpdatedEventFlowable(filter);
    }

    public static List<InitializedEventResponse> getInitializedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(INITIALIZED_EVENT, transactionReceipt);
        ArrayList<InitializedEventResponse> responses = new ArrayList<InitializedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            InitializedEventResponse typedResponse = new InitializedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.version = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static InitializedEventResponse getInitializedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(INITIALIZED_EVENT, log);
        InitializedEventResponse typedResponse = new InitializedEventResponse();
        typedResponse.log = log;
        typedResponse.version = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<InitializedEventResponse> initializedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getInitializedEventFromLog(log));
    }

    public Flowable<InitializedEventResponse> initializedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(INITIALIZED_EVENT));
        return initializedEventFlowable(filter);
    }

    public static List<RoleAdminChangedEventResponse> getRoleAdminChangedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(ROLEADMINCHANGED_EVENT, transactionReceipt);
        ArrayList<RoleAdminChangedEventResponse> responses = new ArrayList<RoleAdminChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static RoleAdminChangedEventResponse getRoleAdminChangedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(ROLEADMINCHANGED_EVENT, log);
        RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
        typedResponse.log = log;
        typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
        typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
        return typedResponse;
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getRoleAdminChangedEventFromLog(log));
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEADMINCHANGED_EVENT));
        return roleAdminChangedEventFlowable(filter);
    }

    public static List<RoleGrantedEventResponse> getRoleGrantedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(ROLEGRANTED_EVENT, transactionReceipt);
        ArrayList<RoleGrantedEventResponse> responses = new ArrayList<RoleGrantedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static RoleGrantedEventResponse getRoleGrantedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(ROLEGRANTED_EVENT, log);
        RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
        typedResponse.log = log;
        typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
        typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
        return typedResponse;
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getRoleGrantedEventFromLog(log));
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEGRANTED_EVENT));
        return roleGrantedEventFlowable(filter);
    }

    public static List<RoleRevokedEventResponse> getRoleRevokedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(ROLEREVOKED_EVENT, transactionReceipt);
        ArrayList<RoleRevokedEventResponse> responses = new ArrayList<RoleRevokedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static RoleRevokedEventResponse getRoleRevokedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(ROLEREVOKED_EVENT, log);
        RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
        typedResponse.log = log;
        typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
        typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
        return typedResponse;
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getRoleRevokedEventFromLog(log));
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEREVOKED_EVENT));
        return roleRevokedEventFlowable(filter);
    }

    public static List<SetupEventResponse> getSetupEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(SETUP_EVENT, transactionReceipt);
        ArrayList<SetupEventResponse> responses = new ArrayList<SetupEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SetupEventResponse typedResponse = new SetupEventResponse();
            typedResponse.log = eventValues.getLog();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static SetupEventResponse getSetupEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(SETUP_EVENT, log);
        SetupEventResponse typedResponse = new SetupEventResponse();
        typedResponse.log = log;
        return typedResponse;
    }

    public Flowable<SetupEventResponse> setupEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getSetupEventFromLog(log));
    }

    public Flowable<SetupEventResponse> setupEventFlowable(DefaultBlockParameter startBlock,
            DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SETUP_EVENT));
        return setupEventFlowable(filter);
    }

    public static List<UpgradedEventResponse> getUpgradedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(UPGRADED_EVENT, transactionReceipt);
        ArrayList<UpgradedEventResponse> responses = new ArrayList<UpgradedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            UpgradedEventResponse typedResponse = new UpgradedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.implementation = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static UpgradedEventResponse getUpgradedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(UPGRADED_EVENT, log);
        UpgradedEventResponse typedResponse = new UpgradedEventResponse();
        typedResponse.log = log;
        typedResponse.implementation = (String) eventValues.getIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<UpgradedEventResponse> upgradedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getUpgradedEventFromLog(log));
    }

    public Flowable<UpgradedEventResponse> upgradedEventFlowable(DefaultBlockParameter startBlock,
            DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(UPGRADED_EVENT));
        return upgradedEventFlowable(filter);
    }

    public static List<VCIssuedEventResponse> getVCIssuedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VCISSUED_EVENT, transactionReceipt);
        ArrayList<VCIssuedEventResponse> responses = new ArrayList<VCIssuedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VCIssuedEventResponse typedResponse = new VCIssuedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.vcId = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.issuer = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.did = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static VCIssuedEventResponse getVCIssuedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(VCISSUED_EVENT, log);
        VCIssuedEventResponse typedResponse = new VCIssuedEventResponse();
        typedResponse.log = log;
        typedResponse.vcId = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.issuer = (String) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.did = (String) eventValues.getNonIndexedValues().get(2).getValue();
        return typedResponse;
    }

    public Flowable<VCIssuedEventResponse> vCIssuedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getVCIssuedEventFromLog(log));
    }

    public Flowable<VCIssuedEventResponse> vCIssuedEventFlowable(DefaultBlockParameter startBlock,
            DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VCISSUED_EVENT));
        return vCIssuedEventFlowable(filter);
    }

    public static List<VCSchemaCreatedEventResponse> getVCSchemaCreatedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VCSCHEMACREATED_EVENT, transactionReceipt);
        ArrayList<VCSchemaCreatedEventResponse> responses = new ArrayList<VCSchemaCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VCSchemaCreatedEventResponse typedResponse = new VCSchemaCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.schemaId = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.issuer = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static VCSchemaCreatedEventResponse getVCSchemaCreatedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(VCSCHEMACREATED_EVENT, log);
        VCSchemaCreatedEventResponse typedResponse = new VCSchemaCreatedEventResponse();
        typedResponse.log = log;
        typedResponse.schemaId = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.issuer = (String) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<VCSchemaCreatedEventResponse> vCSchemaCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getVCSchemaCreatedEventFromLog(log));
    }

    public Flowable<VCSchemaCreatedEventResponse> vCSchemaCreatedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VCSCHEMACREATED_EVENT));
        return vCSchemaCreatedEventFlowable(filter);
    }

    public static List<VCStatusEventResponse> getVCStatusEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VCSTATUS_EVENT, transactionReceipt);
        ArrayList<VCStatusEventResponse> responses = new ArrayList<VCStatusEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VCStatusEventResponse typedResponse = new VCStatusEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.vcId = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.player = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.status = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static VCStatusEventResponse getVCStatusEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(VCSTATUS_EVENT, log);
        VCStatusEventResponse typedResponse = new VCStatusEventResponse();
        typedResponse.log = log;
        typedResponse.vcId = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.player = (String) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.status = (String) eventValues.getNonIndexedValues().get(2).getValue();
        return typedResponse;
    }

    public Flowable<VCStatusEventResponse> vCStatusEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getVCStatusEventFromLog(log));
    }

    public Flowable<VCStatusEventResponse> vCStatusEventFlowable(DefaultBlockParameter startBlock,
            DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VCSTATUS_EVENT));
        return vCStatusEventFlowable(filter);
    }

    public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
        final Function function = new Function(FUNC_DEFAULT_ADMIN_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<String> UPGRADE_INTERFACE_VERSION() {
        final Function function = new Function(FUNC_UPGRADE_INTERFACE_VERSION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<DocumentAndStatus> getDidDoc(String _did) {
        final Function function = new Function(FUNC_GETDIDDOC, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_did)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DocumentAndStatus>() {}));
        return executeRemoteCallSingleValueReturn(function, DocumentAndStatus.class);
    }

    public RemoteFunctionCall<DocumentStatus> getDidDocStatus(String _did) {
        final Function function = new Function(FUNC_GETDIDDOCSTATUS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_did)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DocumentStatus>() {}));
        return executeRemoteCallSingleValueReturn(function, DocumentStatus.class);
    }

    public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
        final Function function = new Function(FUNC_GETROLEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<VcSchema> getVcSchema(String _id) {
        final Function function = new Function(FUNC_GETVCSCHEMA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<VcSchema>() {}));
        return executeRemoteCallSingleValueReturn(function, VcSchema.class);
    }

    public RemoteFunctionCall<VcMeta> getVcmetaData(String _id) {
        final Function function = new Function(FUNC_GETVCMETADATA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<VcMeta>() {}));
        return executeRemoteCallSingleValueReturn(function, VcMeta.class);
    }

    public RemoteFunctionCall<ZKPLibrary_CredentialSchema> getZKPCredential(String _id) {
        final Function function = new Function(FUNC_GETZKPCREDENTIAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<ZKPLibrary_CredentialSchema>() {}));
        return executeRemoteCallSingleValueReturn(function, ZKPLibrary_CredentialSchema.class);
    }

    public RemoteFunctionCall<CredentialDefinition> getZKPCredentialDefinition(String _id) {
        final Function function = new Function(FUNC_GETZKPCREDENTIALDEFINITION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<CredentialDefinition>() {}));
        return executeRemoteCallSingleValueReturn(function, CredentialDefinition.class);
    }

    public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
        final Function function = new Function(
                FUNC_GRANTROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> hasInitialized() {
        final Function function = new Function(FUNC_HASINITIALIZED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
        final Function function = new Function(FUNC_HASROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> initialize(String _documentStorage,
            String _vcMetaStorage, String _zkpStorage, String _multibaseContract) {
        final Function function = new Function(
                FUNC_INITIALIZE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _documentStorage), 
                new org.web3j.abi.datatypes.Address(160, _vcMetaStorage), 
                new org.web3j.abi.datatypes.Address(160, _zkpStorage), 
                new org.web3j.abi.datatypes.Address(160, _multibaseContract)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> isHaveRole(String target, String roleType) {
        final Function function = new Function(FUNC_ISHAVEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, target), 
                new org.web3j.abi.datatypes.Utf8String(roleType)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<byte[]> proxiableUUID() {
        final Function function = new Function(FUNC_PROXIABLEUUID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<TransactionReceipt> registDidDoc(Document _invokedDidDoc) {
        final Function function = new Function(
                FUNC_REGISTDIDDOC, 
                Arrays.<Type>asList(_invokedDidDoc), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> registRole(String target, String roleType) {
        final Function function = new Function(
                FUNC_REGISTROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, target), 
                new org.web3j.abi.datatypes.Utf8String(roleType)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> registVcMetaData(VcMeta _vcMeta) {
        final Function function = new Function(
                FUNC_REGISTVCMETADATA, 
                Arrays.<Type>asList(_vcMeta), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> registVcSchema(VcSchema _vcSchema) {
        final Function function = new Function(
                FUNC_REGISTVCSCHEMA, 
                Arrays.<Type>asList(_vcSchema), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> registZKPCredential(
            ZKPLibrary_CredentialSchema _credentialSchema) {
        final Function function = new Function(
                FUNC_REGISTZKPCREDENTIAL, 
                Arrays.<Type>asList(_credentialSchema), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> registZKPCredentialDefinition(
            CredentialDefinition _credentialDefinition) {
        final Function function = new Function(
                FUNC_REGISTZKPCREDENTIALDEFINITION, 
                Arrays.<Type>asList(_credentialDefinition), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role,
            String callerConfirmation) {
        final Function function = new Function(
                FUNC_RENOUNCEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, callerConfirmation)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
        final Function function = new Function(
                FUNC_REVOKEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setDocumentStorage(String _documentStorage) {
        final Function function = new Function(
                FUNC_SETDOCUMENTSTORAGE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _documentStorage)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setVcMetaStorage(String _vcMetaStorage) {
        final Function function = new Function(
                FUNC_SETVCMETASTORAGE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _vcMetaStorage)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setZKPStorage(String _zkpStorage) {
        final Function function = new Function(
                FUNC_SETZKPSTORAGE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _zkpStorage)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
        final Function function = new Function(FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> updateDidDocStatusInService(String _did,
            String _status, String _versionId) {
        final Function function = new Function(
                FUNC_UPDATEDIDDOCSTATUSINSERVICE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_did), 
                new org.web3j.abi.datatypes.Utf8String(_status), 
                new org.web3j.abi.datatypes.Utf8String(_versionId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> updateDidDocStatusRevocation(String _did,
            String _status, String _terminatedTime) {
        final Function function = new Function(
                FUNC_UPDATEDIDDOCSTATUSREVOCATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_did), 
                new org.web3j.abi.datatypes.Utf8String(_status), 
                new org.web3j.abi.datatypes.Utf8String(_terminatedTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> updateVcStats(String _vcId, String _status) {
        final Function function = new Function(
                FUNC_UPDATEVCSTATS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_vcId), 
                new org.web3j.abi.datatypes.Utf8String(_status)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> upgradeToAndCall(String newImplementation,
            byte[] data, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_UPGRADETOANDCALL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newImplementation), 
                new org.web3j.abi.datatypes.DynamicBytes(data)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    @Deprecated
    public static OpenDID load(String contractAddress, Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        return new OpenDID(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static OpenDID load(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new OpenDID(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static OpenDID load(String contractAddress, Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        return new OpenDID(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static OpenDID load(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new OpenDID(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<OpenDID> deploy(Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        return deployRemoteCall(OpenDID.class, web3j, credentials, contractGasProvider, getDeploymentBinary(), "");
    }

    @Deprecated
    public static RemoteCall<OpenDID> deploy(Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(OpenDID.class, web3j, credentials, gasPrice, gasLimit, getDeploymentBinary(), "");
    }

    public static RemoteCall<OpenDID> deploy(Web3j web3j, TransactionManager transactionManager,
            ContractGasProvider contractGasProvider) {
        return deployRemoteCall(OpenDID.class, web3j, transactionManager, contractGasProvider, getDeploymentBinary(), "");
    }

    @Deprecated
    public static RemoteCall<OpenDID> deploy(Web3j web3j, TransactionManager transactionManager,
            BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(OpenDID.class, web3j, transactionManager, gasPrice, gasLimit, getDeploymentBinary(), "");
    }

    public static void linkLibraries(List<Contract.LinkReference> references) {
        librariesLinkedBinary = linkBinaryWithReferences(BINARY, references);
    }

    private static String getDeploymentBinary() {
        if (librariesLinkedBinary != null) {
            return librariesLinkedBinary;
        } else {
            return BINARY;
        }
    }

    public static class VerificationMethod extends DynamicStruct {
        public String id;

        public BigInteger keyType;

        public String controller;

        public String publicKeyMultibase;

        public BigInteger authType;

        public VerificationMethod(String id, BigInteger keyType, String controller,
                String publicKeyMultibase, BigInteger authType) {
            super(new org.web3j.abi.datatypes.Utf8String(id), 
                    new org.web3j.abi.datatypes.generated.Uint8(keyType), 
                    new org.web3j.abi.datatypes.Utf8String(controller), 
                    new org.web3j.abi.datatypes.Utf8String(publicKeyMultibase), 
                    new org.web3j.abi.datatypes.generated.Uint8(authType));
            this.id = id;
            this.keyType = keyType;
            this.controller = controller;
            this.publicKeyMultibase = publicKeyMultibase;
            this.authType = authType;
        }

        public VerificationMethod(Utf8String id, Uint8 keyType, Utf8String controller,
                Utf8String publicKeyMultibase, Uint8 authType) {
            super(id, keyType, controller, publicKeyMultibase, authType);
            this.id = id.getValue();
            this.keyType = keyType.getValue();
            this.controller = controller.getValue();
            this.publicKeyMultibase = publicKeyMultibase.getValue();
            this.authType = authType.getValue();
        }
    }

    public static class Service extends DynamicStruct {
        public String id;

        public String serviceType;

        public List<String> serviceEndpoint;

        public Service(String id, String serviceType, List<String> serviceEndpoint) {
            super(new org.web3j.abi.datatypes.Utf8String(id), 
                    new org.web3j.abi.datatypes.Utf8String(serviceType), 
                    new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                            org.web3j.abi.datatypes.Utf8String.class,
                            org.web3j.abi.Utils.typeMap(serviceEndpoint, org.web3j.abi.datatypes.Utf8String.class)));
            this.id = id;
            this.serviceType = serviceType;
            this.serviceEndpoint = serviceEndpoint;
        }

        public Service(Utf8String id, Utf8String serviceType,
                @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> serviceEndpoint) {
            super(id, serviceType, serviceEndpoint);
            this.id = id.getValue();
            this.serviceType = serviceType.getValue();
            this.serviceEndpoint = serviceEndpoint.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
        }
    }

    public static class DocumentStatus extends DynamicStruct {
        public String id;

        public BigInteger status;

        public String version;

        public String roleType;

        public String terminatedTime;

        public DocumentStatus(String id, BigInteger status, String version, String roleType,
                String terminatedTime) {
            super(new org.web3j.abi.datatypes.Utf8String(id), 
                    new org.web3j.abi.datatypes.generated.Uint8(status), 
                    new org.web3j.abi.datatypes.Utf8String(version), 
                    new org.web3j.abi.datatypes.Utf8String(roleType), 
                    new org.web3j.abi.datatypes.Utf8String(terminatedTime));
            this.id = id;
            this.status = status;
            this.version = version;
            this.roleType = roleType;
            this.terminatedTime = terminatedTime;
        }

        public DocumentStatus(Utf8String id, Uint8 status, Utf8String version, Utf8String roleType,
                Utf8String terminatedTime) {
            super(id, status, version, roleType, terminatedTime);
            this.id = id.getValue();
            this.status = status.getValue();
            this.version = version.getValue();
            this.roleType = roleType.getValue();
            this.terminatedTime = terminatedTime.getValue();
        }
    }

    public static class MetaData extends DynamicStruct {
        public String formatVersion;

        public String language;

        public MetaData(String formatVersion, String language) {
            super(new org.web3j.abi.datatypes.Utf8String(formatVersion), 
                    new org.web3j.abi.datatypes.Utf8String(language));
            this.formatVersion = formatVersion;
            this.language = language;
        }

        public MetaData(Utf8String formatVersion, Utf8String language) {
            super(formatVersion, language);
            this.formatVersion = formatVersion.getValue();
            this.language = language.getValue();
        }
    }

    public static class SchemaClaimItem extends DynamicStruct {
        public String caption;

        public String format;

        public Boolean hideValue;

        public String id;

        public String _type;

        public SchemaClaimItem(String caption, String format, Boolean hideValue, String id,
                String _type) {
            super(new org.web3j.abi.datatypes.Utf8String(caption), 
                    new org.web3j.abi.datatypes.Utf8String(format), 
                    new org.web3j.abi.datatypes.Bool(hideValue), 
                    new org.web3j.abi.datatypes.Utf8String(id), 
                    new org.web3j.abi.datatypes.Utf8String(_type));
            this.caption = caption;
            this.format = format;
            this.hideValue = hideValue;
            this.id = id;
            this._type = _type;
        }

        public SchemaClaimItem(Utf8String caption, Utf8String format, Bool hideValue, Utf8String id,
                Utf8String _type) {
            super(caption, format, hideValue, id, _type);
            this.caption = caption.getValue();
            this.format = format.getValue();
            this.hideValue = hideValue.getValue();
            this.id = id.getValue();
            this._type = _type.getValue();
        }
    }

    public static class ClaimNamespace extends DynamicStruct {
        public String id;

        public String name;

        public String ref;

        public ClaimNamespace(String id, String name, String ref) {
            super(new org.web3j.abi.datatypes.Utf8String(id), 
                    new org.web3j.abi.datatypes.Utf8String(name), 
                    new org.web3j.abi.datatypes.Utf8String(ref));
            this.id = id;
            this.name = name;
            this.ref = ref;
        }

        public ClaimNamespace(Utf8String id, Utf8String name, Utf8String ref) {
            super(id, name, ref);
            this.id = id.getValue();
            this.name = name.getValue();
            this.ref = ref.getValue();
        }
    }

    public static class Provider extends DynamicStruct {
        public String did;

        public String certVcReference;

        public Provider(String did, String certVcReference) {
            super(new org.web3j.abi.datatypes.Utf8String(did), 
                    new org.web3j.abi.datatypes.Utf8String(certVcReference));
            this.did = did;
            this.certVcReference = certVcReference;
        }

        public Provider(Utf8String did, Utf8String certVcReference) {
            super(did, certVcReference);
            this.did = did.getValue();
            this.certVcReference = certVcReference.getValue();
        }
    }

    public static class CredentialSchemaLibrary_CredentialSchema extends DynamicStruct {
        public String id;

        public String credentialSchemaType;

        public CredentialSchemaLibrary_CredentialSchema(String id, String credentialSchemaType) {
            super(new org.web3j.abi.datatypes.Utf8String(id), 
                    new org.web3j.abi.datatypes.Utf8String(credentialSchemaType));
            this.id = id;
            this.credentialSchemaType = credentialSchemaType;
        }

        public CredentialSchemaLibrary_CredentialSchema(Utf8String id,
                Utf8String credentialSchemaType) {
            super(id, credentialSchemaType);
            this.id = id.getValue();
            this.credentialSchemaType = credentialSchemaType.getValue();
        }
    }

    public static class AttributeNamespace extends DynamicStruct {
        public String id;

        public String name;

        public String ref;

        public AttributeNamespace(String id, String name, String ref) {
            super(new org.web3j.abi.datatypes.Utf8String(id), 
                    new org.web3j.abi.datatypes.Utf8String(name), 
                    new org.web3j.abi.datatypes.Utf8String(ref));
            this.id = id;
            this.name = name;
            this.ref = ref;
        }

        public AttributeNamespace(Utf8String id, Utf8String name, Utf8String ref) {
            super(id, name, ref);
            this.id = id.getValue();
            this.name = name.getValue();
            this.ref = ref.getValue();
        }
    }

    public static class Internationalization extends DynamicStruct {
        public String languageType;

        public String value;

        public Internationalization(String languageType, String value) {
            super(new org.web3j.abi.datatypes.Utf8String(languageType), 
                    new org.web3j.abi.datatypes.Utf8String(value));
            this.languageType = languageType;
            this.value = value;
        }

        public Internationalization(Utf8String languageType, Utf8String value) {
            super(languageType, value);
            this.languageType = languageType.getValue();
            this.value = value.getValue();
        }
    }

    public static class CredentialDefinition extends DynamicStruct {
        public String id;

        public String schemaId;

        public String ver;

        public String _type;

        public String value;

        public String tag;

        public CredentialDefinition(String id, String schemaId, String ver, String _type,
                String value, String tag) {
            super(new org.web3j.abi.datatypes.Utf8String(id), 
                    new org.web3j.abi.datatypes.Utf8String(schemaId), 
                    new org.web3j.abi.datatypes.Utf8String(ver), 
                    new org.web3j.abi.datatypes.Utf8String(_type), 
                    new org.web3j.abi.datatypes.Utf8String(value), 
                    new org.web3j.abi.datatypes.Utf8String(tag));
            this.id = id;
            this.schemaId = schemaId;
            this.ver = ver;
            this._type = _type;
            this.value = value;
            this.tag = tag;
        }

        public CredentialDefinition(Utf8String id, Utf8String schemaId, Utf8String ver,
                Utf8String _type, Utf8String value, Utf8String tag) {
            super(id, schemaId, ver, _type, value, tag);
            this.id = id.getValue();
            this.schemaId = schemaId.getValue();
            this.ver = ver.getValue();
            this._type = _type.getValue();
            this.value = value.getValue();
            this.tag = tag.getValue();
        }
    }

    public static class Document extends DynamicStruct {
        public List<String> context;

        public String id;

        public String controller;

        public String created;

        public String updated;

        public String versionId;

        public Boolean deactivated;

        public List<VerificationMethod> verificationMethod;

        public List<String> assertionMethod;

        public List<String> authentication;

        public List<String> keyAgreement;

        public List<String> capabilityInvocation;

        public List<String> capabilityDelegation;

        public List<Service> services;

        public Document(List<String> context, String id, String controller, String created,
                String updated, String versionId, Boolean deactivated,
                List<VerificationMethod> verificationMethod, List<String> assertionMethod,
                List<String> authentication, List<String> keyAgreement,
                List<String> capabilityInvocation, List<String> capabilityDelegation,
                List<Service> services) {
            super(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                            org.web3j.abi.datatypes.Utf8String.class,
                            org.web3j.abi.Utils.typeMap(context, org.web3j.abi.datatypes.Utf8String.class)), 
                    new org.web3j.abi.datatypes.Utf8String(id), 
                    new org.web3j.abi.datatypes.Utf8String(controller), 
                    new org.web3j.abi.datatypes.Utf8String(created), 
                    new org.web3j.abi.datatypes.Utf8String(updated), 
                    new org.web3j.abi.datatypes.Utf8String(versionId), 
                    new org.web3j.abi.datatypes.Bool(deactivated), 
                    new org.web3j.abi.datatypes.DynamicArray<VerificationMethod>(VerificationMethod.class, verificationMethod), 
                    new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                            org.web3j.abi.datatypes.Utf8String.class,
                            org.web3j.abi.Utils.typeMap(assertionMethod, org.web3j.abi.datatypes.Utf8String.class)), 
                    new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                            org.web3j.abi.datatypes.Utf8String.class,
                            org.web3j.abi.Utils.typeMap(authentication, org.web3j.abi.datatypes.Utf8String.class)), 
                    new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                            org.web3j.abi.datatypes.Utf8String.class,
                            org.web3j.abi.Utils.typeMap(keyAgreement, org.web3j.abi.datatypes.Utf8String.class)), 
                    new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                            org.web3j.abi.datatypes.Utf8String.class,
                            org.web3j.abi.Utils.typeMap(capabilityInvocation, org.web3j.abi.datatypes.Utf8String.class)), 
                    new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                            org.web3j.abi.datatypes.Utf8String.class,
                            org.web3j.abi.Utils.typeMap(capabilityDelegation, org.web3j.abi.datatypes.Utf8String.class)), 
                    new org.web3j.abi.datatypes.DynamicArray<Service>(Service.class, services));
            this.context = context;
            this.id = id;
            this.controller = controller;
            this.created = created;
            this.updated = updated;
            this.versionId = versionId;
            this.deactivated = deactivated;
            this.verificationMethod = verificationMethod;
            this.assertionMethod = assertionMethod;
            this.authentication = authentication;
            this.keyAgreement = keyAgreement;
            this.capabilityInvocation = capabilityInvocation;
            this.capabilityDelegation = capabilityDelegation;
            this.services = services;
        }

        public Document(@Parameterized(type = Utf8String.class) DynamicArray<Utf8String> context,
                Utf8String id, Utf8String controller, Utf8String created, Utf8String updated,
                Utf8String versionId, Bool deactivated,
                @Parameterized(type = VerificationMethod.class) DynamicArray<VerificationMethod> verificationMethod,
                @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> assertionMethod,
                @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> authentication,
                @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> keyAgreement,
                @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> capabilityInvocation,
                @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> capabilityDelegation,
                @Parameterized(type = Service.class) DynamicArray<Service> services) {
            super(context, id, controller, created, updated, versionId, deactivated, verificationMethod, assertionMethod, authentication, keyAgreement, capabilityInvocation, capabilityDelegation, services);
            this.context = context.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
            this.id = id.getValue();
            this.controller = controller.getValue();
            this.created = created.getValue();
            this.updated = updated.getValue();
            this.versionId = versionId.getValue();
            this.deactivated = deactivated.getValue();
            this.verificationMethod = verificationMethod.getValue();
            this.assertionMethod = assertionMethod.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
            this.authentication = authentication.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
            this.keyAgreement = keyAgreement.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
            this.capabilityInvocation = capabilityInvocation.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
            this.capabilityDelegation = capabilityDelegation.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
            this.services = services.getValue();
        }
    }

    public static class VCSchemaClaim extends DynamicStruct {
        public List<SchemaClaimItem> items;

        public ClaimNamespace namespace;

        public VCSchemaClaim(List<SchemaClaimItem> items, ClaimNamespace namespace) {
            super(new org.web3j.abi.datatypes.DynamicArray<SchemaClaimItem>(SchemaClaimItem.class, items), 
                    namespace);
            this.items = items;
            this.namespace = namespace;
        }

        public VCSchemaClaim(
                @Parameterized(type = SchemaClaimItem.class) DynamicArray<SchemaClaimItem> items,
                ClaimNamespace namespace) {
            super(items, namespace);
            this.items = items.getValue();
            this.namespace = namespace;
        }
    }

    public static class VcMeta extends DynamicStruct {
        public String id;

        public Provider issuer;

        public String subject;

        public CredentialSchemaLibrary_CredentialSchema credentialSchema;

        public String status;

        public String issuanceDate;

        public String validFrom;

        public String validUntil;

        public String formatVersion;

        public String language;

        public VcMeta(String id, Provider issuer, String subject,
                CredentialSchemaLibrary_CredentialSchema credentialSchema, String status,
                String issuanceDate, String validFrom, String validUntil, String formatVersion,
                String language) {
            super(new org.web3j.abi.datatypes.Utf8String(id), 
                    issuer, 
                    new org.web3j.abi.datatypes.Utf8String(subject), 
                    credentialSchema, 
                    new org.web3j.abi.datatypes.Utf8String(status), 
                    new org.web3j.abi.datatypes.Utf8String(issuanceDate), 
                    new org.web3j.abi.datatypes.Utf8String(validFrom), 
                    new org.web3j.abi.datatypes.Utf8String(validUntil), 
                    new org.web3j.abi.datatypes.Utf8String(formatVersion), 
                    new org.web3j.abi.datatypes.Utf8String(language));
            this.id = id;
            this.issuer = issuer;
            this.subject = subject;
            this.credentialSchema = credentialSchema;
            this.status = status;
            this.issuanceDate = issuanceDate;
            this.validFrom = validFrom;
            this.validUntil = validUntil;
            this.formatVersion = formatVersion;
            this.language = language;
        }

        public VcMeta(Utf8String id, Provider issuer, Utf8String subject,
                CredentialSchemaLibrary_CredentialSchema credentialSchema, Utf8String status,
                Utf8String issuanceDate, Utf8String validFrom, Utf8String validUntil,
                Utf8String formatVersion, Utf8String language) {
            super(id, issuer, subject, credentialSchema, status, issuanceDate, validFrom, validUntil, formatVersion, language);
            this.id = id.getValue();
            this.issuer = issuer;
            this.subject = subject.getValue();
            this.credentialSchema = credentialSchema;
            this.status = status.getValue();
            this.issuanceDate = issuanceDate.getValue();
            this.validFrom = validFrom.getValue();
            this.validUntil = validUntil.getValue();
            this.formatVersion = formatVersion.getValue();
            this.language = language.getValue();
        }
    }

    public static class AttributeItem extends DynamicStruct {
        public String label;

        public String caption;

        public String _type;

        public List<Internationalization> i18n;

        public AttributeItem(String label, String caption, String _type,
                List<Internationalization> i18n) {
            super(new org.web3j.abi.datatypes.Utf8String(label), 
                    new org.web3j.abi.datatypes.Utf8String(caption), 
                    new org.web3j.abi.datatypes.Utf8String(_type), 
                    new org.web3j.abi.datatypes.DynamicArray<Internationalization>(Internationalization.class, i18n));
            this.label = label;
            this.caption = caption;
            this._type = _type;
            this.i18n = i18n;
        }

        public AttributeItem(Utf8String label, Utf8String caption, Utf8String _type,
                @Parameterized(type = Internationalization.class) DynamicArray<Internationalization> i18n) {
            super(label, caption, _type, i18n);
            this.label = label.getValue();
            this.caption = caption.getValue();
            this._type = _type.getValue();
            this.i18n = i18n.getValue();
        }
    }

    public static class DocumentAndStatus extends DynamicStruct {
        public Document diddoc;

        public BigInteger status;

        public DocumentAndStatus(Document diddoc, BigInteger status) {
            super(diddoc, 
                    new org.web3j.abi.datatypes.generated.Uint8(status));
            this.diddoc = diddoc;
            this.status = status;
        }

        public DocumentAndStatus(Document diddoc, Uint8 status) {
            super(diddoc, status);
            this.diddoc = diddoc;
            this.status = status.getValue();
        }
    }

    public static class CredentialSubject extends DynamicStruct {
        public List<VCSchemaClaim> claims;

        public CredentialSubject(List<VCSchemaClaim> claims) {
            super(new org.web3j.abi.datatypes.DynamicArray<VCSchemaClaim>(VCSchemaClaim.class, claims));
            this.claims = claims;
        }

        public CredentialSubject(
                @Parameterized(type = VCSchemaClaim.class) DynamicArray<VCSchemaClaim> claims) {
            super(claims);
            this.claims = claims.getValue();
        }
    }

    public static class AttributeType extends DynamicStruct {
        public AttributeNamespace namespace;

        public List<AttributeItem> items;

        public AttributeType(AttributeNamespace namespace, List<AttributeItem> items) {
            super(namespace, 
                    new org.web3j.abi.datatypes.DynamicArray<AttributeItem>(AttributeItem.class, items));
            this.namespace = namespace;
            this.items = items;
        }

        public AttributeType(AttributeNamespace namespace,
                @Parameterized(type = AttributeItem.class) DynamicArray<AttributeItem> items) {
            super(namespace, items);
            this.namespace = namespace;
            this.items = items.getValue();
        }
    }

    public static class VcSchema extends DynamicStruct {
        public String id;

        public String schema;

        public String title;

        public String description;

        public MetaData metadata;

        public CredentialSubject credentialSubject;

        public VcSchema(String id, String schema, String title, String description,
                MetaData metadata, CredentialSubject credentialSubject) {
            super(new org.web3j.abi.datatypes.Utf8String(id), 
                    new org.web3j.abi.datatypes.Utf8String(schema), 
                    new org.web3j.abi.datatypes.Utf8String(title), 
                    new org.web3j.abi.datatypes.Utf8String(description), 
                    metadata, 
                    credentialSubject);
            this.id = id;
            this.schema = schema;
            this.title = title;
            this.description = description;
            this.metadata = metadata;
            this.credentialSubject = credentialSubject;
        }

        public VcSchema(Utf8String id, Utf8String schema, Utf8String title, Utf8String description,
                MetaData metadata, CredentialSubject credentialSubject) {
            super(id, schema, title, description, metadata, credentialSubject);
            this.id = id.getValue();
            this.schema = schema.getValue();
            this.title = title.getValue();
            this.description = description.getValue();
            this.metadata = metadata;
            this.credentialSubject = credentialSubject;
        }
    }

    public static class ZKPLibrary_CredentialSchema extends DynamicStruct {
        public String id;

        public String name;

        public String version;

        public List<String> attrNames;

        public List<AttributeType> attrTypes;

        public String tag;

        public ZKPLibrary_CredentialSchema(String id, String name, String version,
                List<String> attrNames, List<AttributeType> attrTypes, String tag) {
            super(new org.web3j.abi.datatypes.Utf8String(id), 
                    new org.web3j.abi.datatypes.Utf8String(name), 
                    new org.web3j.abi.datatypes.Utf8String(version), 
                    new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                            org.web3j.abi.datatypes.Utf8String.class,
                            org.web3j.abi.Utils.typeMap(attrNames, org.web3j.abi.datatypes.Utf8String.class)), 
                    new org.web3j.abi.datatypes.DynamicArray<AttributeType>(AttributeType.class, attrTypes), 
                    new org.web3j.abi.datatypes.Utf8String(tag));
            this.id = id;
            this.name = name;
            this.version = version;
            this.attrNames = attrNames;
            this.attrTypes = attrTypes;
            this.tag = tag;
        }

        public ZKPLibrary_CredentialSchema(Utf8String id, Utf8String name, Utf8String version,
                @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> attrNames,
                @Parameterized(type = AttributeType.class) DynamicArray<AttributeType> attrTypes,
                Utf8String tag) {
            super(id, name, version, attrNames, attrTypes, tag);
            this.id = id.getValue();
            this.name = name.getValue();
            this.version = version.getValue();
            this.attrNames = attrNames.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
            this.attrTypes = attrTypes.getValue();
            this.tag = tag.getValue();
        }
    }

    public static class DIDCreatedEventResponse extends BaseEventResponse {
        public String did;

        public String controller;
    }

    public static class DIDDeactivatedEventResponse extends BaseEventResponse {
        public String did;

        public String controller;
    }

    public static class DIDUpdatedEventResponse extends BaseEventResponse {
        public String did;

        public String controller;
    }

    public static class InitializedEventResponse extends BaseEventResponse {
        public BigInteger version;
    }

    public static class RoleAdminChangedEventResponse extends BaseEventResponse {
        public byte[] role;

        public byte[] previousAdminRole;

        public byte[] newAdminRole;
    }

    public static class RoleGrantedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class RoleRevokedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class SetupEventResponse extends BaseEventResponse {
    }

    public static class UpgradedEventResponse extends BaseEventResponse {
        public String implementation;
    }

    public static class VCIssuedEventResponse extends BaseEventResponse {
        public String vcId;

        public String issuer;

        public String did;
    }

    public static class VCSchemaCreatedEventResponse extends BaseEventResponse {
        public String schemaId;

        public String issuer;
    }

    public static class VCStatusEventResponse extends BaseEventResponse {
        public String vcId;

        public String player;

        public String status;
    }
}
